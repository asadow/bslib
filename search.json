[{"path":[]},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://rstudio.github.io/bslib/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://rstudio.github.io/bslib/PULL_REQUEST_TEMPLATE.html","id":"pull-request","dir":"","previous_headings":"","what":"Pull Request","title":"NA","text":"submit pull request, please ensure ’ve completed following checklist Ensure already open relevant GitHub issue describing problem detail ’ve already received indication maintainers welcome contribution fix problem. helps us prevent wasting anyone’s time. Add unit tests tests/testthat directory. project uses roxygen2 documentation. ’ve made changes documentation, run devtools::document(). Run devtools::check() (, equivalently, click Build->Check Package RStudio IDE) make sure change add messages, warnings, errors. Note decent chance tests already failing changes. Just make sure haven’t introduced new ones. Ensure code changes follow style outlined http://r-pkgs..co.nz/style.html Add entry NEWS.md concisely describing changed.","code":""},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"versions","dir":"Articles","previous_headings":"","what":"Bootstrap versions","title":"Get started","text":"time writing, bslib currently supports: Bootstrap 5 bs_theme(version = 5): intended new projects. Bootstrap 4 bs_theme(version = 4): intended legacy projects happen break version = 5. Bootstrap 3 bs_theme(version = 3): intended legacy projects happen break version = 4. bslib doesn’t require actually specify Bootstrap version. case, provides currently recommended version Bootstrap new projects. Currently Bootstrap 4 recommended, soon change Bootstrap 5+ future releases, ’s best practice specify version, especially reproducibility important project following: Uses Bootstrap Sass variables directly. Uses utility classes. Adds custom HTML, CSS, JavaScript builds Bootstrap.","code":""},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"bootswatch","dir":"Articles","previous_headings":"","what":"Bootswatch themes","title":"Get started","text":"Bootswatch theme available bs_theme()’s bootswatch argument. may already familiar using “pre-packaged” themes via shinythemes package (via theme parameter R Markdown). legacy approaches provide Bootswatch 3 themes, bslib, can use newer themes like minty.","code":"# Shiny usage navbarPage(   theme = bs_theme(bootswatch = \"minty\"),   ... ) # R Markdown usage --- output:   html_document:     theme:       bootswatch: minty ---"},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"custom","dir":"Articles","previous_headings":"","what":"Custom themes","title":"Get started","text":"addition version bootswatch, bs_theme() named arguments customizing main colors fonts. named arguments (e.g., bg, fg, base_font, etc) supported across Bootstrap versions, making useful new legacy projects. ’re looking customize lower-level aspects (e.g., headings, navbars, etc), ’ll want know work Sass variables directly. Also, event Sass variable available meet theming needs, may need write additional CSS rules /leverage utility classes.","code":""},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"main-colors","dir":"Articles","previous_headings":"Custom themes","what":"Main colors & fonts","title":"Get started","text":"bs_theme() provides named arguments customizing main background color (bg), foreground color (fg), accent colors (primary, secondary, etc), fonts (base_font, heading_font, code_font, etc). ’s example using subset named arguments implement dark mode custom fonts:  Among coloring options bs_theme(), bg, fg, primary far influential effect nearly every color page. fact, bg fg alone impact 100s defaults — everything panels (e.g., shiny::wellPanel(), shiny::inputPanel(), etc) navigation (e.g., shiny::navbarPage(), shiny::tabsetPanel(), etc) . accent colors don’t impact nearly much, primary control color important things like hyperlinks, shiny::tabsetPanel() links, accent/focus colors inputs, . said, accent colors can handy customizing things like shiny::actionButton() (defaults secondary color), shiny::showNotification() , generally HTML content leverages Color Utility Classes. choosing bg fg colors, keep mind ’s generally good idea pick colors similar hue large difference luminance. bs_theme() also provides 3 named arguments main fonts: base_font, heading_font, code_font. using web safe font combinations, ’s ok provide character string (comma-separated) font families arguments (e.g., bs_theme(base_font = '\"Times New Roman\", Times, serif'). Otherwise, use one font_google(), font_link(), /font_face() helpers include relevant file(s) client’s browser may render font(s). font_link() font_face() fairly low-level interfaces CSS web font API, font_google() additional ability download cache font file(s), making internet connection needed first time particular font used. choosing fonts, keep mind ’s generally good practice put serif fonts base_font, sans-serif fonts heading_font, monospace fonts code_font. aren’t sure start, article nice gallery Google Font pairings.","code":"# Shiny usage navbarPage(   theme = bs_theme(     bg = \"#101010\",      fg = \"#FDF7F7\",      primary = \"#ED79F9\",      base_font = font_google(\"Prompt\"),     code_font = font_google(\"JetBrains Mono\")   ),   ... ) # R Markdown usage --- output:   html_document:     theme:       bg: \"#101010\"       fg: \"#FDF7F7\"       primary: \"#ED79F9\"       base_font:         google: \"Prompt\"       code_font:         google: \"JetBrains Mono\" ---"},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"low-level","dir":"Articles","previous_headings":"Custom themes","what":"Everything else","title":"Get started","text":"bs_theme() also provides access 100s specific theming options considering anything passed ’s ... argument new Bootstrap Sass variable defaults. allows get targetted theming; example, let’s set $progress-bar-bg Sass variable 'orange' (CSS color).  addition CSS values (e.g., \"orange\"), variable can valid Sass expression, quite useful leveraging Sass’ built-module’s (e.g., mix() mixing colors) Underneath hood, bs_theme() works placing Sass variable defaults Bootstrap’s variable defaults. ’s something like bs_theme(primary = \"red\") “just works” sense provides $primary new default value, also passes value variables default $primary (e.g. $progress-bar-bg). Since bs_theme() defines variables Bootstrap, must define variables differently want reference Bootstrap’s Sass code. example, wanted $progress-bar-bg default $secondary instead $primary? Thankfully bs_add_variables() provides workaround. default, bs_add_variables() works just like bs_theme() (puts variable definitions Sass code), .= \"declarations\", can place definition Bootstrap: ’s currently easy way define variables way R Markdown (using !expr pass bs_theme() object directly theme)","code":"# Shiny usage bs_theme(   bg = \"#002B36\", fg = \"#EEE8D5\",    \"progress-bar-bg\" = \"orange\" ) # R Markdown usage --- output:   html_document:     theme:       bg: \"#002B36\"        fg: \"#EEE8D5\"       progress-bar-bg: \"orange\" --- bs_theme(\"progress-bar-bg\" = \"mix(white, orange, 20%)\") #> $progress-bar-bg: mix(white, orange, 20%) !default; #> @import \"scss/_variables.scss\"; # Reduced version of the Sass code behind `bs_theme(primary = \"red\")` sass::sass(\"   $primary: red !default; // First one wins   $primary: blue !default;   $progress-bar-bg: $primary !default;   @debug $primary, $progress-bar-bg; \") #> red, red sass::sass(bs_theme(\"progress-bar-bg\" = \"$secondary\")) #> Error: Undefined variable: \"$secondary\". bs_add_variables(bs_theme(), \"progress-bar-bg\" = \"$secondary\", .where = \"declarations\") #> @import \"scss/_variables.scss\"; #> $progress-bar-bg: $secondary; output:   html_document:     theme: !expr bslib::bs_add_variables(bslib::bs_theme(), \"progress-bar-bg\" = \"$secondary\", .where = \"declarations\")"},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"real-time","dir":"Articles","previous_headings":"","what":"Real-time theming","title":"Get started","text":"Use bs_theme_preview() (bs_themer()) create custom themes “real-time” via interactive theming widget. former overlays widget demo Shiny app (see hosted version):  latter (bs_themer()) may used Shiny app R Markdown document. Just make sure ’re providing Bootstrap 4 (higher) page constructor call bs_themer() Shiny runtime content (.e., within server function). way, running real-time themer locally Shiny app, ’ll see output like R console (R Markdown, ’ll see YAML output instead R code) reproduce theming changes:","code":"bs_theme_preview() # Shiny usage ui <- navbarPage(   theme = bs_theme(),   ... ) server <- function(input, output) {   bs_themer()   ... } # R Markdown usage --- runtime: shiny output:   html_document:     theme:       bslib: true ---  ```{r} bslib::bs_themer() ```"},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"dynamic","dir":"Articles","previous_headings":"","what":"Dynamic theming","title":"Get started","text":"functionality behind real-time theming can leveraged Shiny app (runtime:shiny Rmd doc) implement custom theming widget (via session$setCurrentTheme()), like dark mode switch:  See sections setCurrentTheme getCurrentTheme learn .","code":"light <- bs_theme() dark <- bs_theme(bg = \"black\", fg = \"white\", primary = \"purple\") ui <- fluidPage(   theme = light,    checkboxInput(\"dark_mode\", \"Dark mode\") ) server <- function(input, output, session) {   observe(session$setCurrentTheme(     if (isTRUE(input$dark_mode)) dark else light   )) } shinyApp(ui, server)"},{"path":[]},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"add-rules","dir":"Articles","previous_headings":"Advanced theming","what":"Adding rules","title":"Get started","text":"good amount theming possible customizing Bootstrap Sass variables bs_theme(), sometimes may also want add additional Sass/CSS rules. bs_add_rules() function makes easy Shiny usage. ’s example adding nes.css, adds additional styles things like mouse cursor (top bs_theme()s theming options).  R Markdown case, ’s recommended additional CSS (Sass) rules come css parameter, may also use bslib engine. bs_add_rules(), rules can reference Bootstrap Sass variables well utilize convenient Sass mixins functions like color-contrast(), mix(), etc.","code":"bs_theme(   bg = \"#e5e5e5\", fg = \"#0d0c0c\", primary = \"#dd2020\",   base_font = font_google(\"Press Start 2P\"),   code_font = font_google(\"Press Start 2P\"),   \"font-size-base\" = \"0.75rem\", \"enable-rounded\" = FALSE ) %>%   bs_add_rules(     '@import \"https://unpkg.com/nes.css@latest/css/nes.min.css\"'   ) --- output:   html_document:     theme:        version: 4     css: my-rules.scss ---  ```{bslib} $custom-bg: rgba($primary, 0.3); .custom {   background-color: $custom-bg;   color: color-contrast(opaque($body-bg, $custom-bg)) } ```  ::: {.custom} Hello custom block with custom styles! :::"},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"utility-classes","dir":"Articles","previous_headings":"Advanced theming","what":"Utility Classes","title":"Get started","text":"Bootstrap 4 (higher), can use utility classes easily add subtract styles specific elements handle common UI problems like spacing, border, colors, . See article Utility Classes useful examples specific Shiny R Markdown.","code":""},{"path":"https://rstudio.github.io/bslib/articles/bslib.html","id":"component-support","dir":"Articles","previous_headings":"","what":"Component support","title":"Get started","text":"list known--themeable HTML components “just work” well custom real-time themes: “core” Shiny UI (e.g., sliderInput(), selectInput(), tabPanel(), navbarPage(), etc.) one exception plotOutput(), case, {thematic} package can used essentially translate CSS R plot theming defaults. Just put thematic_shiny() Shiny apps thematic_rmd() R Markdown documents. rmarkdown::html_document() specific features well {flexdashboard}. un-styled HTML content (e.g., tags$input(type = \"checkbox\")). htmlwidgets like DT plotly (ggplotly() supported thematic right now) time, ’re hoping list grows package authors developers embrace bslib’s tools making themeable custom components.","code":""},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"hello-card","dir":"Articles","previous_headings":"","what":"Hello card()","title":"Cards","text":"card() designed handle number “known” card items (e.g., card_header(), card_body(), etc) unnamed arguments (.e., children). ’ll see shotly, card() also useful named arguments (e.g., full_screen, height, etc). core, card() card items just HTML div() special Bootstrap class, can use Bootstrap’s utility classes customize things like colors, text, borders, etc. text link","code":"card(   card_header(     class = \"bg-dark\",     \"A header\"   ),   card_body(     markdown(\"Some text with a [link](https://github.com)\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"implicit-card_body","dir":"Articles","previous_headings":"","what":"Implicit card_body()","title":"Cards","text":"find using card_body() without changing defaults, consider dropping altogether since direct children card() aren’t “known” card() items, wrapped together implicit card_body() call.1 example, code right generates HTML identical previous example: text link","code":"card(   card_header(     class = \"bg-dark\",     \"A header\"   ),   markdown(\"Some text with a [link](https://github.com)\") )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"fixed-sizing","dir":"Articles","previous_headings":"","what":"Fixed sizing","title":"Cards","text":"default, card()’s size grows accommodate size ’s contents. Thus, portion card_body() contains large amount text, table(s), etc., consider setting fixed height. case, contents exceed specified height, ’ll scrollable. Alternatively, can also set height card fixed size set fill = TRUE card_body() container shrink/grow fit available space card(). Note , , children card_body() aren’t necessarily allowed shrink/grow fit card_body(), card_body_fill() (aka “responsize sizing”) designed .","code":"card(   card_header(     \"A long, scrolling, description\"   ),   card_body(     height = 150,      lorem_ipsum_dolor_sit_amet   ) ) card(   height = 200,   card_header(     \"A long, scrolling, description\"   ),   card_body(     fill = TRUE,     lorem_ipsum_dolor_sit_amet   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"responsive-sizing","dir":"Articles","previous_headings":"","what":"Responsive sizing","title":"Cards","text":"Unlike card_body(), card_body_fill() encourages children grow shrink vertically needed response card()’s height. Responsive sizing particularly useful card(full_screen = TRUE, ...), adds icon (displayed hover) expand card() full screen view. Since many htmlwidgets (like plotly::plot_ly()) Shiny output bindings (like shiny::plotOutput()) default fixed height 400 pixels, actually capable responsive sizing, ’ll get better result card_body_fill() instead card_body() cases (compare “Responsive” “Fixed” result using tabs right). Responsive Fixed --hood, card_body_fill() achieves behavior flex container, makes direct children flex items. can lead suprising, yet useful, differences behavior card_body(). example, inline element (like text, actionLink(), actionButton(), etc) placed new row stretches horizontally (shown example). case want particular elements inside card_body_fill() behave though ’re card_body() (.e., actionLink() actionButton() appear inline line), just wrap elements div(). Sometimes ’s useful put limit much contents card_body_fill() may grow shrink. example, ’s case plot won’t expand 400 pixels (try expanding full screen).","code":"card(   height = 250, full_screen = TRUE,   card_header(\"Responsive sizing\"),   card_body_fill(plotly_widget),   card_footer(     class = \"fs-6\",     \"Copyright 2022 RStudio, PBC\"   ) ) card(   height = 250, full_screen = TRUE,   card_header(\"Fixed sizing\"),   plotly_widget,   card_footer(     class = \"fs-6\",     \"Copyright 2022 RStudio, PBC\"   ) ) card(   height = 250, full_screen = TRUE,   card_header(\"A plot with an action links\"),   card_body_fill(     plotly_widget,     actionLink(       \"go\", \"Action link\",        class = \"link-primary align-self-center\"     ),     actionButton(       \"go_btn\", \"Action button\",        class = \"btn-primary rounded-0\"     )   ) ) card(   height = 200, full_screen = TRUE,   card_header(\"Try expanding full screen\"),   card_body_fill(     plotly_widget,      max_height = \"400px\"   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"fixed-responsive-sizing","dir":"Articles","previous_headings":"","what":"Fixed & responsive sizing","title":"Cards","text":"Sometimes ’s desirable combine card_body_fill() card_body() allow portion body grow/shrink needed, also keep another portion fixed/defined height.","code":"card(   height = 300, full_screen = TRUE,   card_header(\"Plot with long description\"),   card_body_fill(plotly_widget),   card_body(     height = \"30%\",      lorem_ipsum_dolor_sit_amet   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"spacing-alignment","dir":"Articles","previous_headings":"","what":"Spacing & alignment","title":"Cards","text":"card_body() card_body_fill() include padding contents card() container default. either case, can override defaults Bootstrap’s spacing utility classes, like \"p-0\" remove padding altogether. especially useful content already provides sufficient padding. content’s background color different card.2 Utility classes really useful since also help spacing alignment stuff within card_body() (card_body_fill()), generally enable easy customization colors, fonts, . Paragraph 1 Paragraph 2 case card_body_fill(), since ’s based CSS flexbox, can add uniform spacing children via gap argument. Note similar way space multiple columns. , thanks CSS flexbox, contents card_body_fill() aren’t full width, can pretty easily horizontally center via flex utility classes (note handle similar alignment issues card_body() making flexbox container card_body(class = \"d-flex\").","code":"card(   height = 250, full_screen = TRUE,   card_header(\"A stretchy plot with no padding\"),   card_body_fill(     class = \"p-0\",     plotOutput(\"id\")   ) ) card(   card_title(\"A title\"),   p(class = \"text-muted\", \"Paragraph 1\"),   p(class = \"text-end\", \"Paragraph 2\"),   div(     class = \"p-5 bg-secondary text-center\",     span(\"Inline comment\")   ) ) card(   card_body_fill(     gap = \"1rem\", class = \"p-3\",     div(class = \"bg-secondary\", \"Thing 1\"),     div(class = \"bg-secondary\", \"Thing 2\"),     div(class = \"bg-secondary\", \"Thing 3\")   ) ) card(   height = 150, full_screen = TRUE,   card_body_fill(     class = \"p-3 align-items-center\",     plotOutput(\"id\", width = \"50%\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"dynamic-rendering-shiny","dir":"Articles","previous_headings":"","what":"Dynamic rendering (Shiny)","title":"Cards","text":"Since article statically rendered, examples use statically rendered content/widgets, card() functionality works dynamically rendered content via Shiny (e.g., shiny::plotOutput(), plotly::plotlyOutput(), etc). One neat thing dynamic rendering can leverage shiny::getCurrentOutputInfo() render content differently depending height container, particularly useful card(full_screen = T, ...). example, may want additional captions/labels plot large, additional controls table, etc (see value boxes article clever use ).","code":"# UI logic ui <- page_fluid(   card(     height = 200,     full_screen = TRUE,     card_header(\"A dynamically rendered plot\"),     card_body_fill(plotOutput(\"plot_id\"))   ) )  # Server logic server <- function(input, output, session) {   output$plot_id <- renderPlot({     info <- getCurrentOutputInfo()     if (info$height() > 600) {       # code for \"large\" plot     } else {       # code for \"small\" plot     }   }) }  shinyApp(ui, server)"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"static-images","dir":"Articles","previous_headings":"","what":"Static images","title":"Cards","text":"card_image() makes easy embed static (.e., pre-generated) images card. Provide URL href make clickable. case multiple card_image()s, consider laying multiple cards layout_column_wrap() produce grid clickable thumbnails.","code":"card(   height = 300, full_screen = TRUE,   card_image(     file = \"shiny-hex.svg\",     href = \"https://github.com/rstudio/shiny\"   ),   card_title(\"Shiny for R\"),   card_body(     class = \"pt-0 fs-6 lead text-muted\",      \"Brought to you by RStudio.\"   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"multiple-tabs","dir":"Articles","previous_headings":"","what":"Multiple tabs","title":"Cards","text":"navs_tab_card() (well navs_pill_card()) makes easy create cards multiple tabs (pills). functions full_screen capabilities normal card()s well options like title (since natural place card_header() used). Note , similar card(), children nav() panel implicitly wrapped card_body() call, use card_body_fill() appropriate get responsive sizing. Plotly Leaflet","code":"library(leaflet) navs_tab_card(   height = 300, full_screen = TRUE,   title = \"HTML Widgets\",   nav(     \"Plotly\",      card_title(\"A plotly plot\", class = \"pt-1\"),     card_body_fill(plotly_widget)   ),   nav(     \"Leaflet\",     card_title(\"A leaflet plot\", class = \"pt-1\"),     card_body_fill(leaflet_widget)   ),   nav(     shiny::icon(\"circle-info\"),     \"Learn more about\",     tags$a(\"htmlwidgets\", href = \"http://www.htmlwidgets.org/\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"multiple-columns","dir":"Articles","previous_headings":"","what":"Multiple columns","title":"Cards","text":"create multiple columns within card, ’s recommended use layout_column_wrap() (can also used layout multiple cards), especially height columns grow/shrink needed.","code":"card(   height = 300, full_screen = TRUE,   layout_column_wrap(     width = 1/2, class = \"p-3\",     plotOutput(\"p1\"),     plotOutput(\"p2\")   ),   card_body(     height = \"30%\", class = \"pt-0\",     lorem_ipsum_dolor_sit_amet   ) )"},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"multiple-cards","dir":"Articles","previous_headings":"","what":"Multiple cards","title":"Cards","text":"See article layout, specifically section layout_column_wrap() learn useful ways layout multiple cards.","code":""},{"path":"https://rstudio.github.io/bslib/articles/cards.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"Cards","text":"following CSS used give plotOutput() background color; ’s necessary documentation page actually hooked Shiny app, can’t show real plot.","code":".shiny-plot-output {   background-color: #216B7288;   height: 400px;   width: 100%; }"},{"path":"https://rstudio.github.io/bslib/articles/custom-components.html","id":"a-basic-themeable-component","dir":"Articles","previous_headings":"","what":"A basic themeable component","title":"Custom components","text":"going full-blown dynamically themeable custom component, let’s start relatively straight-forward example implementing custom person() component. Say following R function generate HTML classes ’ll write custom Sass/CSS styles : ’s custom Sass style classes. Since Sass rules listen Bootstrap Sass variables like $gray-600, person() styles works great different bs_theme() input: save Sass rules file named person.scss, can bs_add_rules() bs_theme() use themeable person() component like :","code":"person <- function(name, title, company) {   div(     class = \"person\",     h3(class = \"name\", name),     div(class = \"title\", title),     div(class = \"company\", company)   ) } .person {   display: inline-block;   padding: $spacer;   border: $border-width solid $border-color;   @include border-radius;   @include box-shadow;   outline: 0;   width: 300px;   .title {     font-weight: bold;   }   .title, .company {     color: $gray-600;   }   margin: $grid-gutter-width;   margin-right: 0;   // On mobile, span entire width   @include media-breakpoint-down(sm) {     display: block;     width: auto;     margin-right: $grid-gutter-width;   } } .person:last-of-type {   margin-right: $grid-gutter-width; } ui <- fluidPage(   theme = bs_theme(bg = \"#002B36\", fg = \"#EEE8D5\") %>%     bs_add_rules(sass::sass_file(\"person.scss\")),   person(\"Andrew Carnegie\", \"Owner\", \"Carnegie Steel Company\"),   person(\"John D. Rockefeller\", \"Chairman\", \"Standard Oil\") ) shinyApp(ui, function(input, output) {})"},{"path":"https://rstudio.github.io/bslib/articles/custom-components.html","id":"dynamically-themeable-component","dir":"Articles","previous_headings":"","what":"Dynamically themeable component","title":"Custom components","text":"make custom person() component dynamically themeable (.e., make work session$setCurrentTheme()), need R function generates htmltools::htmlDependency() given theme. required, suppose function, person_dependency, lives R package called {mypkg} includes person.scss (pre-compiled person.css) file inst/ directory. following: Note theme bs_theme() object, person.scss compiled Bootstrap Sass variables mixins included via bs_dependency() (returns compiled CSS htmlDependency()). Otherwise, theme bs_theme() object, person() used context bslib relevant, pre-compiled CSS file returned instead. Pre-complied CSS isn’t necessarily requirement, ’s good idea increasing performance reducing software dependencies end users.","code":"name <- \"person\" version <- \"1.0.0\" person_dependency <- function(theme) {   if (is_bs_theme(theme)) {     scss <- system.file(package = \"mypkg\", \"person.scss\")     bs_dependency(       input = sass::sass_file(scss),       theme = theme,       name = name,       version = version     )   } else {     htmlDependency(       name = name,       version = version,       stylesheet = \"person.css\",       package = \"mypkg\",       all_files = FALSE     )   } }  #' @export person <- function(name, title, company) {   div(     class = \"person\",     h3(class = \"name\", name),     div(class = \"title\", title),     div(class = \"company\", company),     bs_dependency_defer(person_dependency)   ) }"},{"path":"https://rstudio.github.io/bslib/articles/custom-components.html","id":"html-widgets","dir":"Articles","previous_headings":"","what":"HTML widgets","title":"Custom components","text":"htmlwidgets can themed via CSS, recommend supplying bs_dependency_defer() dependencies argument createWidget() (similar person() component last section), make widget dynamically themeable. widgets can themed via CSS, best option may query active theme inside preRenderHook() via bs_current_theme(), translate relevant information widget’s instance data, example:","code":"my_widget <- function(...) {   createWidget(     name = \"mywidget\", ...,     preRenderHook = my_widget_hook   ) } my_widget_hook <- function(instance) {   theme <- bslib::bs_current_theme()   if (!bslib::is_bs_theme(theme)) {     return(instance)   }   instance$x$theme <- modifyList(     instance$x$theme, as.list(       bslib::bs_get_variables(theme, c(\"bg\", \"fg\"))     )   )   instance }"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"responsive-column-first-layout","dir":"Articles","previous_headings":"","what":"Responsive column-first layout","title":"UI Layouts","text":"section outlines various layouts made possible layout_column_wrap(). illustrate, ’ll use three card() instances varying content, keep mind layout_column_wrap() designed work UI elements well, value boxes even multiple columns within card. Note: examples section intended viewed mobile devices. small window widths, layouts collapse mobile-friendly approach “show card maximum width”.","code":"library(bslib)  card1 <- card(   card_header(\"Scrolling content\"),   card_body(lorem_ipsum_dolor_sit_amet, fill = TRUE) ) card2 <- card(   card_header(\"Nothing much here\"),   \"This is it.\" ) card3 <- card(   full_screen = TRUE,   card_header(\"Filling content\"),   card_body_fill(     class = \"p-0\",     shiny::plotOutput(\"p\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"uniform-width-and-height","dir":"Articles","previous_headings":"Responsive column-first layout","what":"Uniform width and height","title":"UI Layouts","text":"displaying multiple cards (value boxes, etc) , ’s often visually appealing displayed grid-like layout card height width. layout_column_wrap() optimizes design principle, demands width column (number columns). event cards columns available, cards wrapped new row (default, rows height, can easily vary row height).","code":""},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"fixed-number-of-columns","dir":"Articles","previous_headings":"Responsive column-first layout > Uniform width and height","what":"Fixed number of columns","title":"UI Layouts","text":"fixed number columns, provide width = 1/n, n number columns.1 animation (except mobile devices) shows, width layout_column_wrap() container changes, card grows shrinks maintain 1/2 width. One potential issue fixed number columns , medium sized screens, card width may become small. happens problem, specifying “responsive” number columns may preferable.","code":"layout_column_wrap(   width = 1/2, height = 300,    card1, card2, card3 ) |>   anim_width(\"100%\", \"67%\")"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"responsive-number-of-columns","dir":"Articles","previous_headings":"Responsive column-first layout > Uniform width and height","what":"Responsive number of columns","title":"UI Layouts","text":"responsive number columns (.e., number columns depends window size), provide width valid CSS unit, like 200 pixels. case (three cards), 3rd card gets wrapped onto new line viewport less 600 pixels, wider screens, cards equally distribute free space.","code":"layout_column_wrap(   width = \"200px\", height = 300,    card1, card2, card3 ) |>   anim_width(\"100%\", \"67%\")"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"fixed-column-width","dir":"Articles","previous_headings":"Responsive column-first layout > Uniform width and height","what":"Fixed column width","title":"UI Layouts","text":"keep width column fixed (don’t allow cards grow take free space), set fixed_width = TRUE.","code":"layout_column_wrap(   width = \"200px\", height = 300,    fixed_width = TRUE,   card1, card2, card3 ) |>   anim_width(\"100%\", \"67%\")"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"varying-heights","dir":"Articles","previous_headings":"Responsive column-first layout","what":"Varying heights","title":"UI Layouts","text":"default, layout_column_wrap() wraps columns onto new row, rows given equal height.","code":""},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"by-row","dir":"Articles","previous_headings":"Responsive column-first layout > Varying heights","what":"By row","title":"UI Layouts","text":"allow height row different, set heights_equal = \"row\":","code":"layout_column_wrap(   width = 1/2,   heights_equal = \"row\",   card1, card3, card2 ) |>   anim_height(300, 450)"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"by-column","dir":"Articles","previous_headings":"Responsive column-first layout > Varying heights","what":"By column","title":"UI Layouts","text":"default, height card grows fill available vertical space particular row. opt behavior, set fill = FALSE.","code":"layout_column_wrap(   width = \"200px\", fill = FALSE,   card1, card2, card3 ) |>    anim_height(300, 450)"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"varying-widths","dir":"Articles","previous_headings":"Responsive column-first layout","what":"Varying widths","title":"UI Layouts","text":"Set width NULL provide custom grid-template-columns property (possibly CSS grid properties) accomplish complex layouts, like varying column widths. particular layout gives 1st 3rd card twice much space 2nd:","code":"layout_column_wrap(   width = NULL, height = 300, fill = FALSE,   style = css(grid_template_columns = \"2fr 1fr 2fr\"),   card1, card2, card3 ) |>   anim_height(300, 450)"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"nested-layouts","dir":"Articles","previous_headings":"Responsive column-first layout","what":"Nested layouts","title":"UI Layouts","text":"complex layouts can achieved leveraging fact layout_column_wrap() can appear within another layout_column_wrap()s. example","code":"layout_column_wrap(   width = 1/2,    height = 300,   card1,   layout_column_wrap(     width = 1,      heights_equal = \"row\",     card2, card3   ) )"},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"other-grid-based-layouts","dir":"Articles","previous_headings":"Responsive column-first layout","what":"Other grid-based layouts","title":"UI Layouts","text":"layout_column_wrap() provides simplified interface CSS grid won’t accomodate everything can . case, recommend using {gridlayout} /Shiny UI editor produce layout.","code":""},{"path":"https://rstudio.github.io/bslib/articles/layouts.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"UI Layouts","text":"spirit reproducibility, section discloses custom CSS R code used examples . following CSS used give plotOutput() background color; ’s necessary documentation page actually hooked Shiny app, can’t show real plot. R functions add animation-related CSS class styles whatever tags give . CSS animation rules power anim_width anim_height R functions.","code":".shiny-plot-output {   background-color: #216B7288;   height: 400px;   width: 100%; } library(htmltools)  anim_width <- function(x, width1, width2) {   x |> tagAppendAttributes(     class = \"animate-width\",     style = css(       `--width1` = validateCssUnit(width1),       `--width2` = validateCssUnit(width2),     ),   ) }  anim_height <- function(x, height1, height2) {   # Wrap in a div fixed at the height of height2, so the rest of   # the content on the page doesn't shift up and down   div(style = css(height = validateCssUnit(height2)),     x |> tagAppendAttributes(       class = \"animate-height\",       style = css(         `--height1` = validateCssUnit(height1),         `--height2` = validateCssUnit(height2),       ),     )   ) } @keyframes changewidth {   from { width: var(--width1); }   25% { width: var(--width1); }   50% { width: var(--width2); }   75% { width: var(--width2); }   to { width: var(--width1); } } .animate-width {   animation-duration: 6s;   animation-name: changewidth;   animation-iteration-count: infinite;   border-right: 2px solid #DDD;   padding-right: 1rem;   padding-bottom: 3rem; }  @keyframes changeheight {   from { height: var(--height1); }   25% { height: var(--height1); }   50% { height: var(--height2); }   75% { height: var(--height2); }   to { height: var(--height1); } } .animate-height {   height: 600px;   animation-duration: var(--anim-duration, 6s);   animation-name: changeheight;   animation-iteration-count: infinite;   padding-bottom: 3rem; }"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"sidebar-layouts","dir":"Articles","previous_headings":"","what":"Sidebar layouts","title":"Sidebars","text":"create sidebar layout, provide sidebar() sidebar argument one following functions: flexible sidebar layout. multi-page sidebar layout. multi-tab, card()-based, sidebar layout. Cases 2 3 inherently different 1. cases 2 3, choice either passing sidebar directly function (creates global sidebar) passing sidebar layout particular page / tab (.e., local sidebar). Although global sidebar approach popularized things like shinydashboard, ’re always ideal creating good user experience (UX). general UX rule, sidebar controls grouped closely possible contents effects. , multiple groups outputs want show page, probably opt local instead global sidebar.","code":""},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"setup-code","dir":"Articles","previous_headings":"","what":"Setup code","title":"Sidebars","text":"article’s code examples make repeated use following UI elements. Shiny context1, ’ll probably want inputs like shiny::selectInput(), shiny::sliderInput(), etc., sidebar, since statically hosted website, ’ll use crosstalk input widgets.","code":"library(bslib) library(shiny) library(crosstalk) library(plotly)  # For creating the \"filter\" between the controls and plots dat <- SharedData$new(dplyr::sample_n(diamonds, 1000))  # Sidebar elements (e.g., filter controls) cut <- filter_select(\"cut\", \"Cut\", dat, ~cut) clarity <- filter_select(\"clarity\", \"Clarity\", dat, ~clarity) color <- filter_select(\"color\", \"Color\", dat, ~color)  # Main elements (e.g., plots) plot_price <- plot_ly(dat, x = ~price) plot_carat <- plot_ly(dat, x = ~carat) plot_depth <- plot_ly(dat, x = ~depth)"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"navbar-page","dir":"Articles","previous_headings":"","what":"Navbar page","title":"Sidebars","text":"page_navbar() function provides modern version shiny::navbarPage() (.e., “multi-page app”2) defaults modern version Bootstrap, additional features, sidebar argument.","code":""},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"global-sidebar","dir":"Articles","previous_headings":"Navbar page","what":"Global sidebar","title":"Sidebars","text":"show sidebar() every page (.e., create “global” sidebar), pass sidebar argument page_navbar(): global sidebar, fillable argument controls whether main content area sidebar layout potential grow/shrink fit browser window. setting fillable = TRUE, every page’s main contents allowed grow/shrink.3 example, causes Page 1’s plots shrink Page 2’s plots grow (previous example, plots Page 1 spill container, still accessible via scrolling).","code":"page_navbar(   title = \"Global sidebar\",   sidebar = sidebar(cut, clarity),   nav(\"Page 1\", plot_price, plot_carat),   nav(\"Page 2\", plot_depth) ) page_navbar(   title = \"Global sidebar w/ fill\",   sidebar = sidebar(cut, clarity),   fillable = TRUE,   nav(\"Page 1\", plot_price, plot_carat),   nav(\"Page 2\", plot_depth) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"dynamic-sidebar","dir":"Articles","previous_headings":"Navbar page","what":"Dynamic sidebar","title":"Sidebars","text":"Sometimes ’s helpful sidebar controls change depending page active (especially global sidebar).4 Thanks shiny::conditionalPanel(), can done fairly easily Shiny app:","code":"shinyApp(   page_navbar(     title = \"Dynamic sidebar\",     sidebar = sidebar(       cut, clarity,       conditionalPanel(         \"input.nav === 'Page 2'\",          color       )     ),     id = \"nav\",     nav(\"Page 1\", plot_price, plot_carat),     nav(\"Page 2\", plot_depth)   ),   function(input, output) {} ) # Yields similar result to the examples above  # (only difference is `color` filter appears on Page 2)"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"local-sidebar","dir":"Articles","previous_headings":"Navbar page","what":"Local sidebar","title":"Sidebars","text":"create sidebar layout ’s specific page, place layout_sidebar() inside page (.e., nav()) container. addition allowing pages sidebar, approach also makes possible make group related inputs/outputs visually distinct (unrelated) inputs/outputs. layout_sidebar() fit browser window (way global sidebar ), make relevant page fillable. addition, main contents want fillable (e.g., plot_price allowed grow/shrink fit layout container), also set fillable = TRUE layout_sidebar().","code":"library(leaflet)  page_navbar(   title = \"Local sidebar\",   fluid = FALSE,   nav(     \"Page 1\",      layout_sidebar(       sidebar(cut, clarity, width = 175),        plot_price     ),     br(),     card(       card_header(\"Some unrelated map\"),        leaflet(quakes) |> addTiles() |> addCircleMarkers()     )   ),   nav(\"Page 2\", \"Something else\") ) page_navbar(   title = \"Local sidebar w/ fill\",   fillable = \"Page 1\",   nav(     \"Page 1\",      layout_sidebar(       fillable = TRUE,        border = FALSE,       sidebar(cut, clarity),        plot_price     )   ),   nav(\"Page 2\", \"Something else\") )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"other-page-layouts","dir":"Articles","previous_headings":"","what":"Other page layouts","title":"Sidebars","text":"previous section focused sidebar layouts context page_navbar(), may guessed last couple local sidebar examples, layout_sidebar() can also used inside Bootstrap page() (.e., works page_fixed(), page_fluid(), page_fill(), etc) /card() (’ll cover later).","code":""},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"scrolling-layout","dir":"Articles","previous_headings":"Other page layouts","what":"Scrolling layout","title":"Sidebars","text":"default, layout_sidebar() provides rounded borders padding around container can easily dropped larger page. sizing rules also similar cards sense container grows size ’s contents (default). , ’s lots content, consider specifying height container (contents scrollable). , instead, scrolling contents (default), want allow contents resize height, also set fillable = TRUE:  Note idea scrolling multiple sidebar layouts concept also works page_fluid() page() container (difference amount horizontal padding provided page level). , instead scrolling page level, want sidebar layout(s) fit browser window, consider using page_fill().","code":"page_fixed(   h1(\"My scrolling page\", class = \"lead fs-2 my-3\"),    layout_sidebar(     height = 325,     sidebar(cut, clarity),      \"Scroll down for another plot 👇\",     plot_price, plot_carat   ),   br(),   layout_sidebar(     height = 350,      fillable = TRUE,     sidebar(color, position = \"right\"),      \"No scrolling here\",     plot_price, plot_carat   ),   br() )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"filling-layout","dir":"Articles","previous_headings":"Other page layouts","what":"Filling layout","title":"Sidebars","text":"Since page_fill() fillable container (height 100%) layout_sidebar() fill item (defaults fill = TRUE, just like plotly plots ), layout_sidebar()(s) direct children page_fill() grow/shrink needed fit browser window. Note , doesn’t necessarily mean contents layout_sidebar() grow/shrink (behavior, set fillable = TRUE layout_sidebar()):","code":"page_fill(   h1(     class = \"lead text-center bg-primary bg-gradient my-0 p-3\",     \"My filled page\"   ),   layout_sidebar(     border = FALSE,      border_radius = FALSE,     sidebar(cut, clarity),      \"Scroll down for another plot 👇\",     plot_price, plot_carat   ) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"cards","dir":"Articles","previous_headings":"","what":"Cards","title":"Sidebars","text":"layout_sidebar() can also dropped card(), especially convenient adding card_header(), card_footer(), even full_screen = TRUE behavior. want full_screen = TRUE (/specify height), may also want fillable = TRUE allow contents main area (e.g., plot_price) grow/shrink card container. Also, card context, might make sense hide sidebar default (open = FALSE), especially space limited (e.g., maybe want multiple cards sidebars).","code":"card(   full_screen = TRUE,   card_header(\"Filter diamond price by cut and clarity\"),   layout_sidebar(     sidebar(cut, clarity, open = FALSE),      plot_price,      fillable = TRUE   ) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"cards-with-tabs","dir":"Articles","previous_headings":"","what":"Cards with tabs","title":"Sidebars","text":"’s also possible embed sidebar layout within card()s multiple tabs/pills via navs_tab_card()/navs_pill_card(). , similar page_navbar(), sidebar() can either passed argument (.e., global sidebar) particular tab/pill (.e., local sidebar).","code":""},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"global-sidebar-1","dir":"Articles","previous_headings":"Cards with tabs","what":"Global sidebar","title":"Sidebars","text":"show sidebar() every tab/pill (.e., create “global” sidebar), pass sidebar argument navs_tab_card() (navs_pill_card()). Remember , just like layout_sidebar() card(), navs_tab_card() sizes according ’s contents (default), consider setting height keep fixed height across tabs. , allow contents grow/shrink fit card container, ’ll want wrap contents tab card_body_fill() (wrapper = card_body_fill convenient way tabs). Tab 1 Tab 2","code":"navs_tab_card(   title = \"Global sidebar\",   sidebar = sidebar(cut, clarity),   height = 450,   full_screen = TRUE,   wrapper = card_body_fill,   nav(\"Tab 1\", plot_price, plot_carat),   nav(\"Tab 2\", plot_depth) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"dynamic-sidebar-1","dir":"Articles","previous_headings":"Cards with tabs","what":"Dynamic sidebar","title":"Sidebars","text":"Sometimes ’s helpful sidebar controls change depending page active (especially global sidebar).5 Thanks shiny::conditionalPanel(), can done fairly easily Shiny app:","code":"dynamic <- navs_tab_card(   title = \"Dynamic sidebar\",   sidebar = sidebar(     cut, clarity,     conditionalPanel(       \"input.nav === 'Page 2'\",        color     )   ),   id = \"nav\",   nav(\"Page 1\", plot_price),   nav(\"Page 2\", plot_carat, plot_depth) )  shinyApp(   page_fixed(dynamic),   function(input, output) {} ) # Yields similar result to the examples above  # (only difference is `color` filter appears on Page 2)"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"local-sidebar-1","dir":"Articles","previous_headings":"Cards with tabs","what":"Local sidebar","title":"Sidebars","text":"create sidebar layout ’s specific page, place layout_sidebar() inside tab (.e., nav()) container (similar card() without tabs). Tab 1 Tab 2","code":"navs_tab_card(   title = \"Tab-specific sidebar\",   full_screen = TRUE,   nav(     \"Tab 1\",      layout_sidebar(       sidebar(cut, clarity),        plot_price,       fillable = TRUE     )   ),   nav(     \"Tab 2\",      \"Something else entirely\"   ) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"shiny","dir":"Articles","previous_headings":"","what":"Shiny","title":"Sidebars","text":"Inside Shiny context, open state sidebar() can programmatically updated /queried input value. requires id provided sidebar(). ’s example using sidebar_close() sidebar_open() make sure sidebar open Page 1 closed Page 2.","code":"library(shiny)  ui <- page_navbar(   title = \"Sidebar example\",   id = \"nav\",   sidebar = sidebar(id = \"sidebar\", cut, clarity),   nav(\"Page 1\", plot_price),   nav(\"Page 2\", plot_carat, plot_depth) )  server <- function(input, output) {   observe({     func <- if (input$nav == \"Page 2\") sidebar_close else sidebar_open     func(\"sidebar\")   }) }  shinyApp(ui, server)"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"sidebar-accordions","dir":"Articles","previous_headings":"","what":"Sidebar accordions","title":"Sidebars","text":"accordion appears immediate child inside sidebar(), ’ll render “flush” sidebar, providing convenient way group multiple related input controls collapsible section.","code":"filters_acc <- accordion(   open = TRUE,   accordion_panel(     \"Cut\", icon = bsicons::bs_icon(\"scissors\"),     filter_select(\"cut\", NULL, dat, ~cut),   ),   accordion_panel(     \"Clarity\", icon = bsicons::bs_icon(\"search\"),     filter_select(\"clarity\", NULL, dat, ~clarity)   ) )  layout_sidebar(sidebar(filters_acc), plot_price)"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"nested-sidebars","dir":"Articles","previous_headings":"","what":"Nested sidebars","title":"Sidebars","text":"’s possible nest sidebar layouts, means can effectively number left /right sidebars given layout. , ’ll want main content area every layout_sidebar() contains layout_sidebar() fillable zero padding (class = \"p-0\").","code":"page_fill(     h1(         class = \"lead fs-2 text-center bg-primary bg-gradient my-0 p-3\",         \"Left and right sidebar\"     ),     layout_sidebar(         sidebar(cut, clarity),          layout_sidebar(             sidebar(color, position = \"right\", open = FALSE),              plot_price,             border = FALSE         ),         border_radius = FALSE,         fillable = TRUE,         class = \"p-0\"     ) )"},{"path":"https://rstudio.github.io/bslib/articles/sidebars.html","id":"styling-and-customization","dir":"Articles","previous_headings":"","what":"Styling and customization","title":"Sidebars","text":"sidebar() layout_sidebar() named arguments , ’ve already seen, helpful customizing styling behavior sidebar main content areas. fact, previous example demonstrated advanced usage sidebar()’s position open well layout_sidebar()’s fillable, border, etc. However, useful arguments haven’t seen yet like bg color (specified, contrasting foreground color may also provided dark backgrounds “just work”). “lower-level” theming, may want leverage Bootstrap utility classes /inline styles. , ’ll want aware layout_sidebar()’s ... arguments (thus class, style, etc.) added main content’s container (overall layout container). , add class style attributes layout container, use htmltools::tagAppendAttributes(). Note also layout_sidebar() derives ’s default style Bootstrap CSS variables (e.g., --bs-border-color), enables theming component-level (theming via bs_theme() works page-level).","code":"library(htmltools) library(leaflet)  squake <- SharedData$new(quakes)  container <- layout_sidebar(   class = \"p-0\",    sidebar(     bg = \"#1E1E1E\",      width = \"35%\",     class = \"fw-bold font-monospace\",     filter_slider(\"mag\", \"Magnitude\", squake, ~mag)   ),    leaflet(squake) |> addTiles() |> addCircleMarkers() )  tagAppendAttributes(container, style = css(\"--bs-border-color\" = \"darkgray\"))"},{"path":"https://rstudio.github.io/bslib/articles/utility-classes.html","id":"add-margin","dir":"Articles","previous_headings":"","what":"Add margin","title":"Utility classes","text":"look source theme demo app, actionButton() logic makes use margin spacing (m-2) add spacing buttons (also make use button modifier classes achieve different background colors). ’s worth noting actionButton(), like many core shiny UI components, doesn’t actually explicit class argument, route implicit arguments (.e., ...) top-level HTML tag, actionButton(..., class = \"btn-primary\") add class appropriate place. Another place top-level class can useful customizing body tabPanel().","code":"actionButton(\"primary\", \"Primary\", icon(\"product-hunt\"), class = \"btn-primary m-2\") actionButton(\"secondary\", \"Secondary (default)\", class = \"m-2\") actionButton(\"success\", \"Success\", icon(\"check\"), class = \"btn-success m-2\")"},{"path":"https://rstudio.github.io/bslib/articles/utility-classes.html","id":"add-padding-borders-and-alignment","dir":"Articles","previous_headings":"","what":"Add padding, borders, and alignment","title":"Utility classes","text":"default, tabset panels don’t come padding border(s) around body’s content, can make appears though content just floating space:  can help solve issue adding padding tab’s content (p-3) well nice border matches tab’s borders.  tabsetPanel(type=\"pills\") , looks bit better full, rounded, border:  ’s also worth noting can also add classes rmarkdown tabsets, like :   Unfortunately, can’t always rely class argument placing HTML tag need achieve styling goals. example, can’t simply tabsetPanel(class = \"justify-content-center\", ...) horizontally center tabset. can, however, leverage Sass’s @extend rule essentially add utility classes relevant HTML element(s):","code":"tabsetPanel(   tabPanel(\"One\", \"No padding\"),   tabPanel(\"Two\", \"Very sad!\") ) tab <- function(...) {   shiny::tabPanel(..., class = \"p-3 border border-top-0 rounded-bottom\") } tabsetPanel(   tab(\"One\", \"With padding\"),   tab(\"Two\", \"Nice!\") ) pill <- function(...) {   shiny::tabPanel(..., class = \"p-3 border rounded\") } tabsetPanel(   type = \"pills\",   pill(\"One\", \"With padding\"),   pill(\"Two\", \"Nice!\") ) fluidPage(   theme = bs_theme() %>%     bs_add_rules(\"#my-nav { @extend .justify-content-center }\"),   tabsetPanel(     type = \"pills\", id = \"my-nav\",     pill(\"One\", \"With padding\"),     pill(\"Two\", \"Nice!\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/utility-classes.html","id":"add-background-color","dir":"Articles","previous_headings":"","what":"Add background color","title":"Utility classes","text":"Add bg-* class HTML element set background color theme color (e.g., primary, secondary, etc), note ’ll also make sure foreground color properly contrasts background color (.e., foreground switches white/black intelligently based dark/light background). use bg-primary card component containing {DT} table.","code":"bs4_card <- function(body, title) {   div(     class = \"card\",     div(class = \"card-header bg-primary\", title),     div(class = \"card-body d-flex justify-content-center\", body)   ) }  shinyApp(   fluidPage(     theme = bslib::bs_theme(primary = \"orange\"),     uiOutput(\"dat\")   ),   function(input, output) {     output$dat <- renderUI({       table <- DT::datatable(mtcars, fillContainer = TRUE, style = \"bootstrap4\", rownames = FALSE)       bs4_card(table, \"The mtcars dataset\")     })   } )"},{"path":"https://rstudio.github.io/bslib/articles/utility-classes.html","id":"create-new-utility-classes","dir":"Articles","previous_headings":"","what":"Create new utility classes","title":"Utility classes","text":"Bootstrap Sass also handful Sass maps allow easy creation /modification utility classes. One case creating background color utility classes, say bg-flair via $theme-colors map. useful wanted let $primary default $blue, use bg-flair instead bg-primary color card’s title:","code":"bs_theme(\"theme-colors\" = \"('flair': orange)\")"},{"path":"https://rstudio.github.io/bslib/articles/value-boxes.html","id":"hello-value_box","dir":"Articles","previous_headings":"","what":"Hello value_box()","title":"Value boxes","text":"value_box() 4 main parts: value: text value. title: Optional text display value. showcase: Optional UI element(s) display alongside value. ...: text/UI elements appear value. ’ll see later, one can clever goes showcase, many cases icon provides enough visual context box feel “complete”. recommend using new bsicons package since ’s designed Bootstrap mind, also use fontawesome {icons}. default, showcase displayed left value, can also appear right giving showcase_top_right() showcase_layout. color value box may also customized via theme_color argument. Left center Top Right bslib ain't one hit bslib ain't one hit ","code":"value_box(   title = \"I got\",    value = \"99 problems\",   showcase = bs_icon(\"music-note-beamed\"),   p(\"bslib ain't one\", bs_icon(\"emoji-smile\")),   p(\"hit me\", bs_icon(\"suit-spade\")) ) value_box(   title = \"I got\",    value = \"99 problems\",   showcase = bs_icon(\"music-note-beamed\"),   showcase_layout = showcase_top_right(),   theme_color = \"secondary\",   p(\"bslib ain't one\", bs_icon(\"emoji-smile\")),   p(\"hit me\", bs_icon(\"suit-spade\")) )"},{"path":"https://rstudio.github.io/bslib/articles/value-boxes.html","id":"multiple-value-boxes","dir":"Articles","previous_headings":"","what":"Multiple value boxes","title":"Value boxes","text":"layout multiple value boxes, ’s recommended use layout_column_wrap(), ensures uniform height width (least default) across boxes. 1st detail 2nd detail 3rd detail 4th detail 5th detail 6th detail","code":"layout_column_wrap(   width = \"250px\",   value_box(     title = \"1st value\",      value = \"123\",     showcase = bs_icon(\"bar-chart\"),     p(\"The 1st detail\")   ),   value_box(     title = \"2nd value\",      value = \"456\",     showcase = bs_icon(\"graph-up\"),     p(\"The 2nd detail\"),     p(\"The 3rd detail\")   ),   value_box(     title = \"3rd value\",      value = \"789\",     showcase = bs_icon(\"pie-chart\"),     p(\"The 4th detail\"),     p(\"The 5th detail\"),     p(\"The 6th detail\")   ) )"},{"path":"https://rstudio.github.io/bslib/articles/value-boxes.html","id":"expandable-sparklines","dir":"Articles","previous_headings":"","what":"Expandable sparklines","title":"Value boxes","text":"--hood, value_box() implemented using card(), mainly inherit ’s full_screen capabilities. Expanding value_box() full screen isn’t useful showcase something simple like icon, becomes quite compelling something like “expandable sparkline”. code right demonstrates one way might go plotly. Note , since example statically rendered (outside Shiny), make use htmlwidgets::onRender() add JavaScript effectively says: “Show xaxis chart ’s taller 200 pixels; otherwise, hide ”. aren’t wanting write JavaScript can achieve similar behavior (.e., displaying different chart depending ’s size) via shiny::getCurrentOutputInfo(), mentioned article cards. fact, ’s source code Shiny app effectively thing without JavaScript (note also leverages getCurrentOutputInfo() values avoid hard coding \"white\" colors sparklines). Started 12.6% Averaged 8.6% period Peaked 17.3% May 1975","code":"library(plotly)  sparkline <- plot_ly(economics) %>%   add_lines(     x = ~date, y = ~psavert,     color = I(\"white\"), span = I(1),     fill = 'tozeroy', alpha = 0.2   ) %>%   layout(     xaxis = list(visible = F, showgrid = F, title = \"\"),     yaxis = list(visible = F, showgrid = F, title = \"\"),     hovermode = \"x\",     margin = list(t = 0, r = 0, l = 0, b = 0),     font = list(color = \"white\"),     paper_bgcolor = \"transparent\",     plot_bgcolor = \"transparent\"   ) %>%   config(displayModeBar = F) %>%   htmlwidgets::onRender(     \"function(el) {       var ro = new ResizeObserver(function() {          var visible = el.offsetHeight > 200;          Plotly.relayout(el, {'xaxis.visible': visible});       });       ro.observe(el);     }\"   )   value_box(   title = \"Personal Savings Rate\",   value = \"7.6%\",   p(\"Started at 12.6%\"),   p(\"Averaged 8.6% over that period\"),   p(\"Peaked 17.3% in May 1975\"),   showcase = sparkline,   full_screen = TRUE,   theme_color = \"success\" )"},{"path":"https://rstudio.github.io/bslib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carson Sievert. Author, maintainer. Joe Cheng. Author. RStudio. Copyright holder. Bootstrap contributors. Contributor.            Bootstrap library Twitter, Inc. Copyright holder.            Bootstrap library Javi Aguilar. Contributor, copyright holder.            Bootstrap colorpicker library Thomas Park. Contributor, copyright holder.            Bootswatch library PayPal. Contributor, copyright holder.            Bootstrap accessibility plugin","code":""},{"path":"https://rstudio.github.io/bslib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sievert C, Cheng J (2023). bslib: Custom 'Bootstrap' 'Sass' Themes 'shiny' 'rmarkdown'. https://rstudio.github.io/bslib/, https://github.com/rstudio/bslib.","code":"@Manual{,   title = {bslib: Custom 'Bootstrap' 'Sass' Themes for 'shiny' and 'rmarkdown'},   author = {Carson Sievert and Joe Cheng},   year = {2023},   note = {https://rstudio.github.io/bslib/, https://github.com/rstudio/bslib}, }"},{"path":"https://rstudio.github.io/bslib/index.html","id":"bslib","dir":"","previous_headings":"","what":"Custom Bootstrap Sass Themes for shiny and rmarkdown","title":"Custom Bootstrap Sass Themes for shiny and rmarkdown","text":"bslib R package provides tools customizing Bootstrap themes directly R, making much easier customize appearance Shiny apps & R Markdown documents. bslib’s primary goals : Custom themes may even created interactively real-time. Also provide easy access pre-packaged Bootswatch themes. Shiny R Markdown default Bootstrap 3 continue avoid breaking legacy code. Provide useful wrappers around modern Bootstrap (CSS) components, cards, value boxes, layouts, . Extensions flexdashboard, pkgdown, bookdown already fully support bslib’s custom theming capabilities.","code":""},{"path":"https://rstudio.github.io/bslib/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Custom Bootstrap Sass Themes for shiny and rmarkdown","text":"Install stable release bslib CRAN: Usage Shiny requires version 1.6 higher: Usage R Markdown requires version 2.7 higher:","code":"install.packages(\"bslib\") install.packages(\"shiny\") install.packages(\"rmarkdown\")"},{"path":"https://rstudio.github.io/bslib/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Custom Bootstrap Sass Themes for shiny and rmarkdown","text":"bslib designed use Shiny R Markdown project uses Bootstrap. cases, can identify project uses Bootstrap relevant page constructor theme parameter. example, Shiny page layout functions (e.g., shiny::navbarPage()) popular R Markdown formats (e.g., rmarkdown::html_document) theme parameter. use bslib Shiny, provide bs_theme() object theme parameter; R Markdown, provide bs_theme() parameters theme. example, ’s way upgrade Shiny (left) R Markdown (right) Bootstrap 3 5: See Get Started article learn Bootstrap versions, pre-packaged Bootswatch themes, (real-time) custom theming, . get started quickly, choose relevant R Markdown template inside RStudio going File -> New File -> R Markdown -> Template:","code":"library(shiny) ui <- navbarPage(   theme = bs_theme(version = 5),   ... ) shinyApp(ui, function(...) {}) --- output:   html_document:     theme:       version: 5 ---"},{"path":"https://rstudio.github.io/bslib/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Custom Bootstrap Sass Themes for shiny and rmarkdown","text":"two main places get help bslib: RStudio community friendly place ask questions (sure add bslib tag creating topic). Stack Overflow great source answers common bslib questions. also great place get help, created reproducible example illustrates problem. Use tags [r][bslib] ask question. Add tag [bslib] using Shiny runtime.","code":""},{"path":"https://rstudio.github.io/bslib/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Custom Bootstrap Sass Themes for shiny and rmarkdown","text":"Please note bslib project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://rstudio.github.io/bslib/reference/accordion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vertically collapsing accordion — accordion","title":"Create a vertically collapsing accordion — accordion","text":"Create vertically collapsing accordion","code":""},{"path":"https://rstudio.github.io/bslib/reference/accordion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vertically collapsing accordion — accordion","text":"","code":"accordion(   ...,   id = NULL,   open = NULL,   multiple = TRUE,   class = NULL,   width = NULL,   height = NULL )  accordion_panel(title, ..., value = title, icon = NULL)"},{"path":"https://rstudio.github.io/bslib/reference/accordion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vertically collapsing accordion — accordion","text":"... Named arguments become attributes <div class=\"accordion\"> element. Unnamed arguments accordion_panel()s. id provided, can use input$id server logic determine accordion_panel()s currently active. value correspond accordion_panel()'s value argument. open character vector accordion_panel() values open (.e., show) default. default value NULL open first accordion_panel(). Use value TRUE open (FALSE open none) items. possible open one panel multiple=TRUE. multiple Whether multiple accordion_panel() can open . class Additional CSS classes include accordion div. width, height valid CSS unit; example, height=\"100%\". title title appear accordion_panel()'s header. value character string uniquely identifies panel. icon htmltools::tag child (e.g., bsicons::bs_icon()) positioned just title.","code":""},{"path":"https://rstudio.github.io/bslib/reference/accordion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a vertically collapsing accordion — accordion","text":"https://getbootstrap.com/docs/5.2/components/accordion/","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/accordion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vertically collapsing accordion — accordion","text":"","code":"items <- lapply(LETTERS, function(x) {   accordion_panel(paste(\"Section\", x), paste(\"Some narrative for section\", x)) })  # First shown by default accordion(!!!items) #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-3430\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Section A\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3254\" aria-controls=\"bslib-accordion-panel-3254\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section A<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3254\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section A<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section B\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3020\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3020\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section B<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3020\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section B<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section C\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6006\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6006\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section C<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6006\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section C<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section D\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8708\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8708\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section D<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8708\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section D<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section E\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3062\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3062\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section E<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3062\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section E<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section F\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5284\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5284\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section F<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5284\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section F<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section G\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3157\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3157\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section G<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3157\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section G<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section H\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-1853\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-1853\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section H<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-1853\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section H<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section I\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4100\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4100\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section I<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4100\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section I<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section J\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9652\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9652\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section J<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9652\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section J<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section K\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9959\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9959\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section K<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9959\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section K<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section L\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9887\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9887\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section L<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9887\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section L<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section M\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2634\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2634\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section M<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2634\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section M<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section N\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4343\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4343\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section N<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4343\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section N<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section O\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9472\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9472\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section O<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9472\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section O<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section P\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8092\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8092\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section P<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8092\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section P<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Q\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7619\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7619\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Q<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7619\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Q<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section R\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2077\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2077\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section R<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2077\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section R<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section S\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5039\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5039\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section S<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5039\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section S<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section T\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7309\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7309\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section T<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7309\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section T<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section U\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5921\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5921\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section U<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5921\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section U<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section V\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8707\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8707\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section V<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8707\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section V<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section W\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3093\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3093\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section W<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3093\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section W<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section X\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6762\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6762\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section X<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6762\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section X<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Y\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9905\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9905\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Y<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9905\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Y<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Z\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6117\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6117\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Z<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6117\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Z<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div> # Nothing shown by default accordion(!!!items, open = FALSE) #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-4274\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Section A\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3254\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3254\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section A<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3254\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section A<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section B\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3020\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3020\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section B<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3020\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section B<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section C\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6006\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6006\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section C<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6006\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section C<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section D\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8708\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8708\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section D<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8708\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section D<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section E\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3062\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3062\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section E<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3062\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section E<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section F\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5284\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5284\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section F<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5284\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section F<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section G\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3157\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3157\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section G<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3157\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section G<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section H\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-1853\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-1853\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section H<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-1853\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section H<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section I\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4100\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4100\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section I<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4100\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section I<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section J\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9652\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9652\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section J<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9652\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section J<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section K\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9959\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9959\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section K<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9959\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section K<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section L\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9887\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9887\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section L<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9887\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section L<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section M\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2634\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2634\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section M<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2634\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section M<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section N\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4343\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4343\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section N<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4343\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section N<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section O\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9472\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9472\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section O<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9472\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section O<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section P\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8092\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8092\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section P<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8092\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section P<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Q\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7619\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7619\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Q<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7619\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Q<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section R\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2077\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2077\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section R<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2077\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section R<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section S\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5039\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5039\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section S<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5039\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section S<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section T\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7309\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7309\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section T<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7309\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section T<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section U\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5921\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5921\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section U<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5921\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section U<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section V\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8707\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8707\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section V<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8707\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section V<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section W\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3093\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3093\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section W<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3093\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section W<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section X\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6762\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6762\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section X<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6762\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section X<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Y\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9905\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9905\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Y<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9905\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Y<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Z\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6117\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6117\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Z<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6117\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Z<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div> # Everything shown by default accordion(!!!items, open = TRUE) #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-7849\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Section A\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3254\" aria-controls=\"bslib-accordion-panel-3254\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section A<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3254\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section A<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section B\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3020\" aria-controls=\"bslib-accordion-panel-3020\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section B<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3020\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section B<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section C\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6006\" aria-controls=\"bslib-accordion-panel-6006\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section C<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6006\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section C<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section D\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8708\" aria-controls=\"bslib-accordion-panel-8708\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section D<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8708\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section D<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section E\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3062\" aria-controls=\"bslib-accordion-panel-3062\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section E<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3062\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section E<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section F\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5284\" aria-controls=\"bslib-accordion-panel-5284\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section F<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5284\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section F<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section G\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3157\" aria-controls=\"bslib-accordion-panel-3157\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section G<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3157\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section G<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section H\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-1853\" aria-controls=\"bslib-accordion-panel-1853\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section H<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-1853\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section H<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section I\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4100\" aria-controls=\"bslib-accordion-panel-4100\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section I<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4100\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section I<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section J\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9652\" aria-controls=\"bslib-accordion-panel-9652\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section J<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9652\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section J<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section K\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9959\" aria-controls=\"bslib-accordion-panel-9959\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section K<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9959\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section K<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section L\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9887\" aria-controls=\"bslib-accordion-panel-9887\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section L<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9887\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section L<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section M\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2634\" aria-controls=\"bslib-accordion-panel-2634\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section M<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2634\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section M<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section N\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4343\" aria-controls=\"bslib-accordion-panel-4343\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section N<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4343\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section N<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section O\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9472\" aria-controls=\"bslib-accordion-panel-9472\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section O<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9472\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section O<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section P\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8092\" aria-controls=\"bslib-accordion-panel-8092\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section P<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8092\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section P<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Q\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7619\" aria-controls=\"bslib-accordion-panel-7619\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Q<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7619\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section Q<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section R\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2077\" aria-controls=\"bslib-accordion-panel-2077\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section R<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2077\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section R<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section S\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5039\" aria-controls=\"bslib-accordion-panel-5039\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section S<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5039\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section S<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section T\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7309\" aria-controls=\"bslib-accordion-panel-7309\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section T<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7309\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section T<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section U\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5921\" aria-controls=\"bslib-accordion-panel-5921\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section U<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5921\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section U<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section V\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8707\" aria-controls=\"bslib-accordion-panel-8707\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section V<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8707\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section V<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section W\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3093\" aria-controls=\"bslib-accordion-panel-3093\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section W<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3093\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section W<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section X\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6762\" aria-controls=\"bslib-accordion-panel-6762\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section X<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6762\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section X<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Y\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9905\" aria-controls=\"bslib-accordion-panel-9905\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Y<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9905\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section Y<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Z\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6117\" aria-controls=\"bslib-accordion-panel-6117\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Z<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6117\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section Z<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>  # Show particular sections accordion(!!!items, open = \"Section B\") #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-6498\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Section A\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3254\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3254\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section A<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3254\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section A<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section B\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3020\" aria-controls=\"bslib-accordion-panel-3020\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section B<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3020\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section B<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section C\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6006\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6006\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section C<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6006\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section C<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section D\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8708\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8708\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section D<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8708\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section D<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section E\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3062\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3062\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section E<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3062\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section E<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section F\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5284\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5284\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section F<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5284\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section F<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section G\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3157\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3157\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section G<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3157\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section G<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section H\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-1853\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-1853\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section H<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-1853\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section H<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section I\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4100\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4100\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section I<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4100\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section I<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section J\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9652\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9652\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section J<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9652\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section J<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section K\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9959\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9959\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section K<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9959\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section K<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section L\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9887\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9887\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section L<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9887\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section L<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section M\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2634\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2634\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section M<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2634\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section M<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section N\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4343\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4343\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section N<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4343\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section N<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section O\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9472\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9472\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section O<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9472\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section O<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section P\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8092\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8092\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section P<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8092\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section P<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Q\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7619\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7619\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Q<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7619\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Q<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section R\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2077\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2077\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section R<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2077\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section R<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section S\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5039\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5039\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section S<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5039\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section S<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section T\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7309\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7309\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section T<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7309\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section T<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section U\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5921\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5921\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section U<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5921\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section U<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section V\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8707\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8707\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section V<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8707\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section V<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section W\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3093\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3093\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section W<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3093\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section W<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section X\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6762\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6762\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section X<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6762\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section X<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Y\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9905\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9905\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Y<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9905\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Y<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Z\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6117\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6117\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Z<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6117\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Z<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div> accordion(!!!items, open = c(\"Section A\", \"Section B\")) #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-2566\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Section A\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3254\" aria-controls=\"bslib-accordion-panel-3254\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section A<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3254\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section A<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section B\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3020\" aria-controls=\"bslib-accordion-panel-3020\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section B<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3020\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\">Some narrative for section B<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section C\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6006\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6006\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section C<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6006\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section C<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section D\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8708\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8708\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section D<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8708\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section D<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section E\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3062\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3062\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section E<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3062\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section E<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section F\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5284\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5284\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section F<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5284\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section F<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section G\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3157\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3157\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section G<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3157\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section G<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section H\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-1853\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-1853\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section H<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-1853\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section H<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section I\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4100\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4100\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section I<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4100\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section I<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section J\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9652\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9652\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section J<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9652\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section J<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section K\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9959\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9959\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section K<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9959\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section K<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section L\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9887\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9887\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section L<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9887\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section L<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section M\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2634\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2634\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section M<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2634\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section M<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section N\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-4343\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-4343\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section N<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-4343\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section N<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section O\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9472\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9472\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section O<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9472\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section O<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section P\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8092\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8092\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section P<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8092\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section P<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Q\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7619\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7619\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Q<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7619\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Q<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section R\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-2077\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-2077\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section R<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-2077\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section R<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section S\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5039\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5039\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section S<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5039\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section S<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section T\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7309\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-7309\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section T<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-7309\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section T<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section U\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-5921\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-5921\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section U<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-5921\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section U<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section V\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-8707\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-8707\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section V<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-8707\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section V<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section W\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3093\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3093\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section W<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-3093\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section W<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section X\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6762\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6762\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section X<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6762\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section X<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Y\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-9905\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-9905\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Y<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-9905\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Y<\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Section Z\"> #>       <span class=\"accordion-header h2\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6117\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6117\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Section Z<\/div> #>         <\/button> #>       <\/span> #>       <div id=\"bslib-accordion-panel-6117\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\">Some narrative for section Z<\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>  # Provide an id to create a shiny input binding if (interactive()) {   library(shiny)    ui <- page_fluid(     accordion(!!!items, id = \"acc\")   )    server <- function(input, output) {     observe(print(input$acc))   }    shinyApp(ui, server) }"},{"path":"https://rstudio.github.io/bslib/reference/accordion_panel_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamically update accordions — accordion_panel_set","title":"Dynamically update accordions — accordion_panel_set","text":"Dynamically (.e., programmatically) update/modify accordion()s Shiny app. functions require id provided accordion() must also called within active Shiny session.","code":""},{"path":"https://rstudio.github.io/bslib/reference/accordion_panel_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamically update accordions — accordion_panel_set","text":"","code":"accordion_panel_set(id, values, session = get_current_session())  accordion_panel_open(id, values, session = get_current_session())  accordion_panel_close(id, values, session = get_current_session())  accordion_panel_insert(   id,   panel,   target = NULL,   position = c(\"after\", \"before\"),   session = get_current_session() )  accordion_panel_remove(id, target, session = get_current_session())  accordion_panel_update(   id,   target,   ...,   title = NULL,   value = NULL,   icon = NULL,   session = get_current_session() )"},{"path":"https://rstudio.github.io/bslib/reference/accordion_panel_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamically update accordions — accordion_panel_set","text":"id character string matches existing accordion()'s id. values either character string (used identify particular accordion_panel() value) TRUE (.e., values). session shiny session object (default almost always used). panel accordion_panel(). target value existing panel insert next . removing: value accordion_panel() remove. position panel added target? target NULL (default), \"\" append last panel \"\" prepend first panel. ... Named arguments become attributes <div class=\"accordion\"> element. Unnamed arguments accordion_panel()s. title title appear accordion_panel()'s header. value character string uniquely identifies panel. icon htmltools::tag child (e.g., bsicons::bs_icon()) positioned just title.","code":""},{"path":"https://rstudio.github.io/bslib/reference/accordion_panel_set.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Dynamically update accordions — accordion_panel_set","text":"accordion_panel_set(): accordion_panel_open(), except also closes currently open panels. accordion_panel_open(): open accordion_panel()s. accordion_panel_close(): close accordion_panel()s. accordion_panel_insert(): insert new accordion_panel() accordion_panel_remove(): remove accordion_panel()s. accordion_panel_update(): update accordion_panel().","code":""},{"path":"https://rstudio.github.io/bslib/reference/bootswatch_themes.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a list of all available bootswatch themes. — bootswatch_themes","title":"Obtain a list of all available bootswatch themes. — bootswatch_themes","text":"Obtain list available bootswatch themes.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bootswatch_themes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a list of all available bootswatch themes. — bootswatch_themes","text":"","code":"bootswatch_themes(version = version_default(), full_path = FALSE)"},{"path":"https://rstudio.github.io/bslib/reference/bootswatch_themes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a list of all available bootswatch themes. — bootswatch_themes","text":"version major version Bootswatch. full_path whether return path installed theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bootswatch_themes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a list of all available bootswatch themes. — bootswatch_themes","text":"character vector Bootswatch themes.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Add low-level theming customizations — bs_add_variables","title":"Add low-level theming customizations — bs_add_variables","text":"Compared higher-level theme customization available bs_theme(), functions direct interface Bootstrap Sass, therefore, nothing ensure theme customizations portable major Bootstrap versions.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add low-level theming customizations — bs_add_variables","text":"","code":"bs_add_variables(   theme,   ...,   .where = \"defaults\",   .default_flag = identical(.where, \"defaults\") )  bs_add_rules(theme, rules)  bs_add_functions(theme, functions)  bs_add_mixins(theme, mixins)  bs_bundle(theme, ...)"},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add low-level theming customizations — bs_add_variables","text":"theme bs_theme() object. ... bs_add_variables(): named Sass variables values can passed directly defaults argument sass::sass_layer(). bs_bundle(): arguments can handled sass::sass_bundle() appended theme .Whether place variable definitions Sass \"defaults\", Sass \"declarations\", Sass \"rules\". .default_flag Whether add !default flag (missing) variable expressions. recommended keep TRUE .= \"defaults\". rules Sass rules. Anything understood sass::as_sass() may provided (e.g., list, character vector, sass::sass_file(), etc) functions character vector sass::sass_file() containing functions definitions. mixins character vector sass::sass_file() containing mixin definitions.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add low-level theming customizations — bs_add_variables","text":"modified bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add low-level theming customizations — bs_add_variables","text":"bs_add_variables(): Add Bootstrap Sass variable defaults bs_add_rules(): Add additional Sass rules bs_add_functions(): Add additional Sass functions bs_add_mixins(): Add additional Sass mixins bs_bundle(): Add additional sass::sass_bundle() objects existing theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add low-level theming customizations — bs_add_variables","text":"https://getbootstrap.com/docs/4.4/getting-started/theming/ https://rstudio.github.io/sass/articles/sass.html#layering","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_bundle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add low-level theming customizations — bs_add_variables","text":"","code":"# Function to preview the styling a (primary) Bootstrap button library(htmltools) button <- tags$a(class = \"btn btn-primary\", href = \"#\", role = \"button\", \"Hello\") preview_button <- function(theme) {   if (interactive()) {     browsable(tags$body(bs_theme_dependencies(theme), button))   } }  # Here we start with a theme based on a Bootswatch theme, # then override some variable defaults theme <- bs_add_variables(   bs_theme(bootswatch = \"sketchy\", primary = \"orange\"),   \"body-bg\" = \"#EEEEEE\",   \"font-family-base\" = \"monospace\",   \"font-size-base\" = \"1.4rem\",   \"btn-padding-y\" = \".16rem\",   \"btn-padding-x\" = \"2rem\" )  preview_button(theme)  # If you need to set a variable based on another Bootstrap variable theme <- bs_add_variables(theme, \"body-color\" = \"$success\", .where = \"declarations\") preview_button(theme)  # Start a new global theme and add some custom rules that # use Bootstrap variables to define a custom styling for a # 'person card' person_rules <- system.file(\"custom\", \"person.scss\", package = \"bslib\") theme <- bs_add_rules(bs_theme(), sass::sass_file(person_rules)) # Include custom CSS that leverages bootstrap Sass variables person <- function(name, title, company) {   tags$div(     class = \"person\",     h3(class = \"name\", name),     div(class = \"title\", title),     div(class = \"company\", company)   ) } if (interactive()) {   browsable(shiny::fluidPage(     theme = theme,     person(\"Andrew Carnegie\", \"Owner\", \"Carnegie Steel Company\"),     person(\"John D. Rockefeller\", \"Chairman\", \"Standard Oil\")   )) }"},{"path":"https://rstudio.github.io/bslib/reference/bs_current_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the currently active theme at render time — bs_current_theme","title":"Obtain the currently active theme at render time — bs_current_theme","text":"Intended advanced use developers obtain currently active theme render time primarily implementing themable widgets otherwise themed via bs_dependency_defer() .","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_current_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the currently active theme at render time — bs_current_theme","text":"","code":"bs_current_theme(session = get_current_session(FALSE))"},{"path":"https://rstudio.github.io/bslib/reference/bs_current_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the currently active theme at render time — bs_current_theme","text":"session current Shiny session ().","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_current_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the currently active theme at render time — bs_current_theme","text":"bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_current_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain the currently active theme at render time — bs_current_theme","text":"function generally called print/render time. example: Inside preRenderHook htmlwidgets::createWidget(). Inside custom print method generates htmltools::tags. Inside htmltools::tagFunction() Calling function print/render time important different things based context called: reactive context active, session$getCurrentTheme() called (reactive read). reactive context active, shiny::getCurrentTheme() called (returns current app's theme, relevant). shiny::getCurrentTheme() comes empty, bs_global_get() called, relevant rmarkdown::html_document(), possibly static rendering contexts.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Themeable HTML components — bs_dependency","title":"Themeable HTML components — bs_dependency","text":"Themeable HTML components use Sass generate CSS rules Bootstrap Sass variables, functions, /mixins (.e., stuff inside theme). bs_dependencies() makes bit easier create themeable components compiling sass::sass() (input) together Bootstrap Sass inside theme, packaging result htmlDependency(). Themable components can also  dynamically themed inside Shiny (.e., may themed 'real-time' via bs_themer(), generally, update styles response shiny::session's setCurrentTheme() method). Dynamically themeable components provide \"recipe\" (.e., function) bs_dependency_defer(), describing generate new CSS stylesheet(s) new theme. function called HTML page first rendered, may invoked new theme whenever shiny::session's setCurrentTheme() called.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Themeable HTML components — bs_dependency","text":"","code":"bs_dependency(   input = list(),   theme,   name,   version,   cache_key_extra = NULL,   .dep_args = list(),   .sass_args = list() )  bs_dependency_defer(func, memoise = TRUE)"},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Themeable HTML components — bs_dependency","text":"input Sass rules compile, using theme. theme bs_theme() object. name Library name version Library version cache_key_extra Extra information add sass cache key. useful add version package. .dep_args list additional arguments pass htmltools::htmlDependency(). Note package effect script must absolute path(s). .sass_args list additional arguments pass sass::sass_partial(). func non-anonymous function, single argument. function accept bs_theme() object return single htmlDependency(), list , NULL. memoise whether memoise (.e., cache) func results short period time. default, TRUE, can large performance benefits many instances themable widget rendered. Note may want avoid memoisation func relies side-effects (e.g., files -disk) need change themable widget instance.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Themeable HTML components — bs_dependency","text":"bs_dependency() returns htmltools::htmlDependency() bs_dependency_defer() returns htmltools::tagFunction()","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Themeable HTML components — bs_dependency","text":"https://rstudio.github.io/bslib/articles/custom-components.html","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_dependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Themeable HTML components — bs_dependency","text":"","code":"if (FALSE) {  myWidgetVersion <- \"1.2.3\"  myWidgetDependency <- function() {   list(     bs_dependency_defer(myWidgetCss),     htmlDependency(       name = \"mywidget-js\",       version = myWidgetVersion,       src = system.file(package = \"mypackage\", \"js\"),       script = \"mywidget.js\"     )   ) }  myWidgetCSS <- function(theme) {   if (!is_bs_theme(theme)) {     return(       htmlDependency(         name = \"mywidget-css\",         version = myWidgetVersion,         src = system.file(package = \"mypackage\", \"css\"),         stylesheet = \"mywidget.css\"       )     )   }    # Compile mywidget.scss using the variables and defaults from the theme   # object.   sass_input <- sass::sass_file(system.file(package = \"mypackage\", \"scss/mywidget.scss\"))    bs_dependency(     input = sass_input,     theme = theme,     name = \"mywidget\",     version = myWidgetVersion,     cache_key_extra = utils::packageVersion(\"mypackage\")   ) }  # Note that myWidgetDependency is not defined inside of myWidget. This is so # that, if `myWidget()` is called multiple times, Shiny can tell that the # function objects are identical and deduplicate them. myWidget <- function(id) {   div(     id = id,     span(\"myWidget\"),     myWidgetDependency()   ) } }"},{"path":"https://rstudio.github.io/bslib/reference/bs_get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Sass variable values from the current theme — bs_get_variables","title":"Retrieve Sass variable values from the current theme — bs_get_variables","text":"Useful retriving variable current theme using value inform another R function.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Sass variable values from the current theme — bs_get_variables","text":"","code":"bs_get_variables(theme, varnames)  bs_get_contrast(theme, varnames)"},{"path":"https://rstudio.github.io/bslib/reference/bs_get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Sass variable values from the current theme — bs_get_variables","text":"theme bs_theme() object. varnames character string referencing Sass variable current theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Sass variable values from the current theme — bs_get_variables","text":"character string containing CSS/Sass value. variable(s) defined, value NA.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_get_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Sass variable values from the current theme — bs_get_variables","text":"","code":"vars <- c(\"body-bg\", \"body-color\", \"primary\", \"border-radius\") bs_get_variables(bs_theme(), varnames = vars) #>       body-bg    body-color       primary border-radius  #>        \"#fff\"     \"#212529\"     \"#0d6efd\"    \"0.375rem\"  bs_get_variables(bs_theme(bootswatch = \"darkly\"), varnames = vars) #>       body-bg    body-color       primary border-radius  #>        \"#222\"        \"#fff\"     \"#375a7f\"    \"0.375rem\"    bs_get_contrast(bs_theme(), c(\"primary\", \"dark\", \"light\")) #>   primary      dark     light  #> \"#FFFFFF\" \"#FFFFFF\" \"#000000\"   library(htmltools) div(   class = \"bg-primary\",   style = css(     color = bs_get_contrast(bs_theme(), \"primary\")   ) ) #> <div class=\"bg-primary\" style=\"color:#FFFFFF;\"><\/div>"},{"path":"https://rstudio.github.io/bslib/reference/bs_global_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Global theming — bs_global_theme","title":"Global theming — bs_global_theme","text":"bs_global_theme() creates new (global) Bootstrap Sass theme bs_theme_dependencies() (sass_partial()) can consume (theme argument defaults bs_global_get(), get current global theme).","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_global_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global theming — bs_global_theme","text":"","code":"bs_global_theme(   version = version_default(),   bootswatch = NULL,   bg = NULL,   fg = NULL,   primary = NULL,   secondary = NULL,   success = NULL,   info = NULL,   warning = NULL,   danger = NULL,   base_font = NULL,   code_font = NULL,   heading_font = NULL,   ... )  bs_global_set(theme = bs_theme())  bs_global_get()  bs_global_clear()  bs_global_add_variables(   ...,   .where = \"defaults\",   .default_flag = identical(.where, \"defaults\") )  bs_global_add_rules(...)  bs_global_bundle(...)  bs_global_theme_update(   ...,   bootswatch = NULL,   bg = NULL,   fg = NULL,   primary = NULL,   secondary = NULL,   success = NULL,   info = NULL,   warning = NULL,   danger = NULL,   base_font = NULL,   code_font = NULL,   heading_font = NULL )"},{"path":"https://rstudio.github.io/bslib/reference/bs_global_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global theming — bs_global_theme","text":"version major version Bootstrap use (see versions() possible values). Defaults currently recommended version new projects (currently Bootstrap 5). bootswatch name bootswatch theme (see bootswatch_themes() possible values). provided bs_theme_update(), previous Bootswatch theme first removed new one applied (use bootswatch = \"default\" effectively remove Bootswatch theme). bg color string background. fg color string foreground. primary color used hyperlinks, indicate primary/default actions, show active selection state Bootstrap components. Generally bold, saturated color contrasts theme's base colors. secondary color components messages need stand . (supported Bootstrap 3.) success color messages indicate operation succeeded. Typically green. info color messages informative critical. Typically shade blue-green. warning color warning messages. Typically yellow. danger color errors. Typically red. base_font default typeface. code_font typeface used code. sure monospace! heading_font typeface used heading elements. ... arguments passed along bs_add_variables(). theme bs_theme() object. .Whether place variable definitions Sass \"defaults\", Sass \"declarations\", Sass \"rules\". .default_flag Whether add !default flag (missing) variable expressions. recommended keep TRUE .= \"defaults\".","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_global_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global theming — bs_global_theme","text":"functions modify global theme (e.g., bs_global_set()) invisibly return previously set theme. bs_global_get() returns current global theme.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/bs_global_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global theming — bs_global_theme","text":"","code":"# Remember the global state now (so we can restore later) theme <- bs_global_get() # Use Bootstrap 3 (globally) with some theme customization bs_global_theme(3, bg = \"#444\", fg = \"#e4e4e4\", primary = \"#e39777\") if (interactive()) bs_theme_preview(with_themer = FALSE) # If no global theme is active, bs_global_get() returns NULL bs_global_clear() bs_global_get() #> NULL # Restore the original state bs_global_set(theme)"},{"path":"https://rstudio.github.io/bslib/reference/bs_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove or retrieve Sass code from a theme — bs_remove","title":"Remove or retrieve Sass code from a theme — bs_remove","text":"Remove retrieve Sass code theme","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove or retrieve Sass code from a theme — bs_remove","text":"","code":"bs_remove(theme, ids = character(0))  bs_retrieve(theme, ids = character(0), include_unnamed = TRUE)"},{"path":"https://rstudio.github.io/bslib/reference/bs_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove or retrieve Sass code from a theme — bs_remove","text":"theme bs_theme() object. ids character vector ids include_unnamed whether include unnamed sass::sass_layer()s (e.g., Bootstrap Sass variables, functions, mixins).","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove or retrieve Sass code from a theme — bs_remove","text":"modified bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove or retrieve Sass code from a theme — bs_remove","text":"","code":"# Remove CSS rules for print and carousels bs4 <- bs_theme(version = 4) bs_remove(bs4, c(\"_print\", \"_carousel\")) #> /* Sass Bundle: _root, _reboot, _type, _images, _code, _grid, _tables, _forms, _buttons, _transitions, _dropdown, _button-group, _input-group, _custom-forms, _nav, _navbar, _card, _breadcrumb, _pagination, _badge, _jumbotron, _alert, _progress, _media, _list-group, _close, _toasts, _modal, _tooltip, _popover, _spinners, _utilities, bs3compat, nav_spacer */ #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_deprecated.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_functions.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/sass-utils/color-contrast.scss\"; #>  #>  #>  #> @import \"/home/runner/work/_temp/Library/bslib/bs3compat/_defaults.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_variables.scss\"; #> $bootstrap-version: 4; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_mixins.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/bs3compat/_declarations.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_root.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_reboot.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_type.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_images.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_code.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_grid.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_tables.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_forms.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_buttons.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_transitions.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_dropdown.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_button-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_input-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_custom-forms.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_nav.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_navbar.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_card.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_breadcrumb.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_pagination.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_badge.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_jumbotron.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_alert.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_progress.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_media.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_list-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_close.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_toasts.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_modal.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_tooltip.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_popover.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_spinners.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_utilities.scss\"; #> .table th[align=left] { text-align: left; } #> .table th[align=right] { text-align: right; } #> .table th[align=center] { text-align: center; } #> @import \"/home/runner/work/_temp/Library/bslib/bs3compat/_rules.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/nav-spacer/nav-spacer.scss\"; #> /* *** */ #>  #> Other Sass Bundle information: #> List of 2 #>  $ html_deps       :List of 1 #>   ..$ :List of 10 #>   .. ..$ name      : chr \"bs3compat\" #>   .. ..$ version   : chr \"0.4.2.9000\" #>   .. ..$ src       :List of 1 #>   .. .. ..$ file: chr \"bs3compat/js\" #>   .. ..$ meta      : NULL #>   .. ..$ script    : chr [1:3] \"transition.js\" \"tabs.js\" \"bs3compat.js\" #>   .. ..$ stylesheet: NULL #>   .. ..$ head      : NULL #>   .. ..$ attachment: NULL #>   .. ..$ package   : chr \"bslib\" #>   .. ..$ all_files : logi TRUE #>   .. ..- attr(*, \"class\")= chr \"html_dependency\" #>  $ file_attachments: Named chr \"/home/runner/work/_temp/Library/bslib/lib/bs3/assets/fonts\" #>   ..- attr(*, \"names\")= chr \"fonts\"  # Remove BS3 compatibility layer bs_remove(bs4, \"bs3compat\") #> /* Sass Bundle: _root, _reboot, _type, _images, _code, _grid, _tables, _forms, _buttons, _transitions, _dropdown, _button-group, _input-group, _custom-forms, _nav, _navbar, _card, _breadcrumb, _pagination, _badge, _jumbotron, _alert, _progress, _media, _list-group, _close, _toasts, _modal, _tooltip, _popover, _carousel, _spinners, _utilities, _print, nav_spacer */ #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_deprecated.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_functions.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/sass-utils/color-contrast.scss\"; #>  #>  #>  #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_variables.scss\"; #> $bootstrap-version: 4; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_mixins.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_root.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_reboot.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_type.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_images.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_code.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_grid.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_tables.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_forms.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_buttons.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_transitions.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_dropdown.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_button-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_input-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_custom-forms.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_nav.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_navbar.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_card.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_breadcrumb.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_pagination.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_badge.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_jumbotron.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_alert.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_progress.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_media.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_list-group.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_close.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_toasts.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_modal.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_tooltip.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_popover.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_carousel.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_spinners.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_utilities.scss\"; #> @import \"/home/runner/work/_temp/Library/bslib/lib/bs4/scss/_print.scss\"; #> .table th[align=left] { text-align: left; } #> .table th[align=right] { text-align: right; } #> .table th[align=center] { text-align: center; } #> @import \"/home/runner/work/_temp/Library/bslib/nav-spacer/nav-spacer.scss\"; #> /* *** */"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap theme — bs_theme","title":"Create a Bootstrap theme — bs_theme","text":"Creates Bootstrap theme object, can: Choose (major) Bootstrap version. Choose Bootswatch theme (optional). Customize main colors fonts via explicitly named arguments (e.g., bg, fg, primary, etc). Customize , lower-level, Bootstrap Sass variable defaults via .... learn implement custom themes, well use inside Shiny R Markdown, see .","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap theme — bs_theme","text":"","code":"bs_theme(   version = version_default(),   bootswatch = NULL,   ...,   bg = NULL,   fg = NULL,   primary = NULL,   secondary = NULL,   success = NULL,   info = NULL,   warning = NULL,   danger = NULL,   base_font = NULL,   code_font = NULL,   heading_font = NULL,   font_scale = NULL )  bs_theme_update(   theme,   ...,   bootswatch = NULL,   bg = NULL,   fg = NULL,   primary = NULL,   secondary = NULL,   success = NULL,   info = NULL,   warning = NULL,   danger = NULL,   base_font = NULL,   code_font = NULL,   heading_font = NULL,   font_scale = NULL )  is_bs_theme(x)"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap theme — bs_theme","text":"version major version Bootstrap use (see versions() possible values). Defaults currently recommended version new projects (currently Bootstrap 5). bootswatch name bootswatch theme (see bootswatch_themes() possible values). provided bs_theme_update(), previous Bootswatch theme first removed new one applied (use bootswatch = \"default\" effectively remove Bootswatch theme). ... arguments passed along bs_add_variables(). bg color string background. fg color string foreground. primary color used hyperlinks, indicate primary/default actions, show active selection state Bootstrap components. Generally bold, saturated color contrasts theme's base colors. secondary color components messages need stand . (supported Bootstrap 3.) success color messages indicate operation succeeded. Typically green. info color messages informative critical. Typically shade blue-green. warning color warning messages. Typically yellow. danger color errors. Typically red. base_font default typeface. code_font typeface used code. sure monospace! heading_font typeface used heading elements. font_scale scalar multiplier apply base font size. example, value 1.5 scales font sizes 150% value 0.8 scales 80%. Must positive number. theme bs_theme() object. x object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap theme — bs_theme","text":"sass::sass_bundle() (list-like) object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"colors","dir":"Reference","previous_headings":"","what":"Colors","title":"Create a Bootstrap theme — bs_theme","text":"Colors may provided format htmltools::parseCssColors() can understand. control vast majority ('grayscale') color defaults, specify fg (foreground) bg (background) colors. primary secondary theme colors also useful accenting main grayscale colors things like hyperlinks, tabset panels, buttons.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"fonts","dir":"Reference","previous_headings":"","what":"Fonts","title":"Create a Bootstrap theme — bs_theme","text":"Use base_font, code_font, heading_font control main typefaces. arguments set new defaults relevant font-family CSS properties, necessarily import relevant font files. set CSS properties import font files, consider using various font_face() helpers. *_font argument may collection character vectors, font_google()s, font_link()s /font_face()s. Note character vector can : single unquoted name (e.g., \"Source Sans Pro\"). single quoted name (e.g., \"'Source Sans Pro'\"). comma-separated list names w/ individual names quoted necessary. (e.g. c(\"Open Sans\", \"'Source Sans Pro'\", \"'Helvetica Neue', Helvetica, sans-serif\")) Since font_google(..., local = TRUE) guarantees client access font family, meaning relatively safe specify just one font family, instance:   However, specifying multiple \"fallback\" font families recommended, especially relying remote /system fonts available, instance. Fallback fonts useful handling missing fonts, also handling Flash Invisible Text (FOIT) can quite noticeable remote web fonts slow internet connection.","code":"bs_theme(base_font = font_google(\"Pacifico\", local = TRUE)) bs_theme(base_font = font_collection(font_google(\"Pacifico\", local = FALSE), \"Roboto\", \"sans-serif\"))"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Bootstrap theme — bs_theme","text":"https://rstudio.github.io/bslib/articles/bslib.html https://rstudio.github.io/sass/","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/bs_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap theme — bs_theme","text":"","code":"theme <- bs_theme(   # Controls the default grayscale palette   bg = \"#202123\", fg = \"#B8BCC2\",   # Controls the accent (e.g., hyperlink, button, etc) colors   primary = \"#EA80FC\", secondary = \"#48DAC6\",   base_font = c(\"Grandstander\", \"sans-serif\"),   code_font = c(\"Courier\", \"monospace\"),   heading_font = \"'Helvetica Neue', Helvetica, sans-serif\",   # Can also add lower-level customization   \"input-border-color\" = \"#EA80FC\" ) if (interactive()) {   bs_theme_preview(theme) }  # Lower-level bs_add_*() functions allow you to work more # directly with the underlying Sass code theme <- bs_add_variables(theme, \"my-class-color\" = \"red\") theme <- bs_add_rules(theme, \".my-class { color: $my-class-color }\")"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"bs_theme_dependencies() compiles Bootstrap Sass CSS returns , along HTML dependencies, list htmltools::htmlDependency()s. users need call function directly Shiny & R Markdown perform compilation automatically handed bs_theme(). looking create themeable component, see bs_dependency().","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"","code":"bs_theme_dependencies(   theme,   sass_options = sass::sass_options_get(output_style = \"compressed\"),   cache = sass::sass_cache_get(),   jquery = jquerylib::jquery_core(3),   precompiled = get_precompiled_option(\"bslib.precompiled\", default = TRUE) )"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"theme bs_theme() object. sass_options sass::sass_options() object. cache can directory use cache, FileCache object created sass_file_cache(), FALSE NULL caching. jquery jquerylib::jquery_core() object. precompiled compiling theme object, first look precompiled CSS file theme_version().  precompiled = TRUE precompiled CSS file exists theme object, fetched immediately compiled. moment, provide precompiled CSS \"stock\" builds Bootstrap (.e., theming additions, bootswatch themes, non-default sass_options).","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"list HTML dependencies containing Bootstrap CSS, Bootstrap JavaScript, jquery. list may contain additional HTML dependencies bundled theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":"sass-caching-and-precompilation","dir":"Reference","previous_headings":"","what":"Sass caching and precompilation","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"Shiny Developer Mode enabled (setting options(shiny.devmode = TRUE) calling shiny::devmode(TRUE)), sass caching bslib precompilation disabled default; , call bs_theme_dependencies(theme) expands bs_theme_dependencies(theme, cache = F, precompiled = F)). useful local development enabling caching/precompilation may produce incorrect results local changes made bslib's source files.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile Bootstrap Sass with (optional) theming — bs_theme_dependencies","text":"","code":"# Function to preview the styling a (primary) Bootstrap button library(htmltools) button <- tags$a(class = \"btn btn-primary\", href = \"#\", role = \"button\", \"Hello\") preview_button <- function(theme) {   if (interactive()) {     browsable(tags$body(bs_theme_dependencies(theme), button))   } }  # Latest Bootstrap preview_button(bs_theme()) # Bootstrap 3 preview_button(bs_theme(3)) # Bootswatch 4 minty theme preview_button(bs_theme(4, bootswatch = \"minty\")) # Bootswatch 4 sketchy theme preview_button(bs_theme(4, bootswatch = \"sketchy\"))"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview the currently set theme — bs_theme_preview","title":"Preview the currently set theme — bs_theme_preview","text":"Launches example shiny app via run_with_themer() bs_theme_dependencies(). Useful getting quick preview current theme setting well interactive GUI tweaking main theme settings.","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview the currently set theme — bs_theme_preview","text":"","code":"bs_theme_preview(theme = bs_theme(), ..., with_themer = TRUE)"},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview the currently set theme — bs_theme_preview","text":"theme bs_theme() object. ... passed along shiny::runApp(). with_themer whether run app run_with_themer().","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview the currently set theme — bs_theme_preview","text":"nothing, function called side-effects (launching application).","code":""},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preview the currently set theme — bs_theme_preview","text":"app launches subject change.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/bs_theme_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preview the currently set theme — bs_theme_preview","text":"","code":"theme <- bs_theme(bg = \"#6c757d\", fg = \"white\", primary = \"orange\") if (interactive()) bs_theme_preview(theme)"},{"path":"https://rstudio.github.io/bslib/reference/card.html","id":null,"dir":"Reference","previous_headings":"","what":"A Bootstrap card component — card","title":"A Bootstrap card component — card","text":"general purpose container grouping related UI elements together border optional padding. learn card()s, see article.","code":""},{"path":"https://rstudio.github.io/bslib/reference/card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Bootstrap card component — card","text":"","code":"card(   ...,   full_screen = FALSE,   height = NULL,   class = NULL,   wrapper = card_body )"},{"path":"https://rstudio.github.io/bslib/reference/card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Bootstrap card component — card","text":"... Unnamed arguments can valid child htmltools tag (includes card items card_body(). Named arguments become HTML attributes returned UI element. full_screen TRUE, icon appear hovering card body. Clicking icon expands card fit viewport size. Consider pairing feature card_body_fill() get output responds changes size card. height valid CSS unit (e.g., height=\"200px\"). class Additional CSS classes returned UI element. wrapper function (returns UI element) call unnamed arguments ... already card item(s) (like card_header(), card_body(), etc.). Note non-card items grouped together one wrapper call (e.g. given card(\"\", \"b\", card_body(\"c\"), \"d\"), wrapper called twice, \"\" \"b\" \"d\"). Consider setting wrapper card_body_fill entire card wants responsive sizing NULL avoid wrapping altogether","code":""},{"path":"https://rstudio.github.io/bslib/reference/card.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Bootstrap card component — card","text":"htmltools::div() tag.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/card.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Bootstrap card component — card","text":"","code":"library(htmltools)  if (interactive()) {   card(     full_screen = TRUE,     card_header(       \"This is the header\"     ),     card_body(       p(\"This is the body.\"),       p(\"This is still the body.\")     ),     card_footer(       \"This is the footer\"     )   ) }"},{"path":"https://rstudio.github.io/bslib/reference/card_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Card items — card_body","title":"Card items — card_body","text":"Components designed provided direct children card(). general overview card() API, see article.","code":""},{"path":"https://rstudio.github.io/bslib/reference/card_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Card items — card_body","text":"","code":"card_body(..., fill = FALSE, height = NULL, class = NULL)  card_body_fill(   ...,   gap = NULL,   max_height = NULL,   max_height_full_screen = max_height,   min_height = NULL,   class = NULL )  card_title(..., container = htmltools::h5)  card_header(..., class = NULL, container = htmltools::div)  card_footer(..., class = NULL)  card_image(   file,   ...,   href = NULL,   border_radius = c(\"top\", \"bottom\", \"all\", \"none\"),   mime_type = NULL,   class = NULL,   height = NULL,   width = NULL,   container = card_body_fill )  as.card_item(x)  is.card_item(x)"},{"path":"https://rstudio.github.io/bslib/reference/card_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Card items — card_body","text":"... Unnamed arguments can valid child htmltools tag. Named arguments become HTML attributes returned UI element. fill whether allow card_body() grow shrink fit card(). height valid CSS unit (e.g., height=\"200px\"). class Additional CSS classes returned UI element. gap CSS length unit defining gap (.e., spacing) elements provided .... max_height, max_height_full_screen, min_height valid CSS length unit. container function generate HTML element contain image. file file path pointing image. image base64 encoded provided src attribute <img>. Alternatively, may set value NULL provide src . href optional URL link . border_radius apply border-radius image. mime_type mime type file. width valid CSS unit (e.g., width=\"100%\"). x object test (coerce ) card item.","code":""},{"path":"https://rstudio.github.io/bslib/reference/card_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Card items — card_body","text":"htmltools::div() tag.","code":""},{"path":"https://rstudio.github.io/bslib/reference/card_body.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Card items — card_body","text":"card_body(): general container \"main content\" card(). card_body_fill(): Similar card_body(fill = TRUE), also marks return element \"fill container\" (via htmltools::bindFillRole()) immediate children allowed grow shrink fit. card_title(): Similar card_header() without border background color. card_header(): header (border background color) card(). Typically appears card_body(). card_footer(): header (border background color) card(). Typically appears card_body(). card_image(): Include static (.e., pre-generated) images. .card_item(): Mark object card item. prevent card() putting object inside wrapper (.e., card_body()).","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — bs_theme_new","title":"Deprecated functions — bs_theme_new","text":"functions deprecated remain backwards compatibility.","code":""},{"path":"https://rstudio.github.io/bslib/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — bs_theme_new","text":"","code":"bs_theme_new(...)  bs_theme_clear(...)  bs_theme_get(...)  bs_theme_set(...)  bs_theme_base_colors(...)  bs_theme_accent_colors(...)  bs_theme_fonts(...)  bs_theme_add_variables(...)  bs_theme_add(...)  bs_theme_get_variables(...)  bootstrap(theme = bs_theme_get(), ...)  bootstrap_sass(rules = list(), theme = bs_theme_get(), ...)  bs_add_declarations(theme, declarations)"},{"path":"https://rstudio.github.io/bslib/reference/deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions — bs_theme_new","text":"bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/font_face.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for importing web fonts — font_face","title":"Helpers for importing web fonts — font_face","text":"font_google(), font_link(), font_face() re-exported sass package (see sass::font_face() details). quick example use functions bs_theme(), see examples section .","code":""},{"path":"https://rstudio.github.io/bslib/reference/font_face.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpers for importing web fonts — font_face","text":"","code":"# If you have an internet connection, running the following code # will download, cache, and import the relevant Google Font files # for local use theme <- bs_theme(   base_font = font_google(\"Fira Sans\"),   code_font = font_google(\"Fira Code\"),   heading_font = font_google(\"Fredoka One\") ) if (interactive()) {   bs_theme_preview(theme) }  # Three different yet equivalent ways of importing a remotely-hosted Google Font a <- font_google(\"Crimson Pro\", wght = \"200..900\", local = FALSE) b <- font_link(   \"Crimson Pro\",   href = \"https://fonts.googleapis.com/css2?family=Crimson+Pro:wght@200..900\" ) url <- \"https://fonts.gstatic.com/s/crimsonpro/v13/q5uDsoa5M_tv7IihmnkabARboYF6CsKj.woff2\" c <- font_face(   family = \"Crimson Pro\",   style = \"normal\",   weight = \"200 900\",   src = paste0(\"url(\", url, \") format('woff2')\") ) theme <- bs_theme(base_font = c) if (interactive()) {   bs_theme_preview(theme) }"},{"path":"https://rstudio.github.io/bslib/reference/html-browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Make HTML browsable by default — print.bslib_fragment","title":"Make HTML browsable by default — print.bslib_fragment","text":"Make HTML browsable default","code":""},{"path":"https://rstudio.github.io/bslib/reference/html-browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make HTML browsable by default — print.bslib_fragment","text":"","code":"# S3 method for bslib_fragment print(x, ...)  # S3 method for bslib_page print(x, ...)"},{"path":"https://rstudio.github.io/bslib/reference/html-browse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make HTML browsable by default — print.bslib_fragment","text":"x tag() object. ... passed along underlying print method","code":""},{"path":"https://rstudio.github.io/bslib/reference/layout_column_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"A grid-like, column-first, layout — layout_column_wrap","title":"A grid-like, column-first, layout — layout_column_wrap","text":"Wraps 1d sequence UI elements 2d grid. number columns (rows) grid dependent column width well size display. explanation illustrative examples, see ","code":""},{"path":"https://rstudio.github.io/bslib/reference/layout_column_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A grid-like, column-first, layout — layout_column_wrap","text":"","code":"layout_column_wrap(   width,   ...,   fixed_width = FALSE,   heights_equal = c(\"all\", \"row\"),   fill = TRUE,   height = NULL,   height_mobile = NULL,   gap = NULL,   class = NULL )"},{"path":"https://rstudio.github.io/bslib/reference/layout_column_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A grid-like, column-first, layout — layout_column_wrap","text":"width desired width card, can following: (unit-less) number 0 1. specified 1/num, num represents number desired columns. CSS length unit Either minimum (fixed_width=FALSE) fixed width (fixed_width=TRUE). NULL Allows power users set grid-template-columns CSS property manually, either via style attribute CSS stylesheet. ... Unnamed arguments UI elements (e.g., card()) Named arguments become attributes containing htmltools::tag element. fixed_width Whether interpret width minimum (fixed_width=FALSE) fixed (fixed_width=TRUE) width CSS length unit. heights_equal \"\" (default), every card every row grid height. \"row\", every card row grid height, heights may vary rows. fill whether grid items grow fill row height. height valid CSS unit (e.g., height=\"200px\"). height_mobile valid CSS unit use height mobile devices (narrow windows). gap CSS length unit defining gap (.e., spacing) elements provided .... class Additional CSS classes returned UI element.","code":""},{"path":"https://rstudio.github.io/bslib/reference/layout_column_wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A grid-like, column-first, layout — layout_column_wrap","text":"","code":"x <- card(\"A simple card\") # Always has 2 columns (on non-mobile) layout_column_wrap(1/2, x, x, x) #> <div class=\"container-fluid\"> #>   <div class=\"bslib-column-wrap html-fill-item\" data-require-bs-caller=\"layout_column_wrap()\" data-require-bs-version=\"5\" style=\"grid-template-columns:1fr 1fr;grid-auto-rows:1fr;--bslib-column-wrap-height:auto;--bslib-column-wrap-height-mobile:auto;\"> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div> # Has three columns when viewport is wider than 750px layout_column_wrap(\"250px\", x, x, x) #> <div class=\"container-fluid\"> #>   <div class=\"bslib-column-wrap html-fill-item\" data-require-bs-caller=\"layout_column_wrap()\" data-require-bs-version=\"5\" style=\"grid-template-columns:repeat(auto-fit, minmax(250px, 1fr));grid-auto-rows:1fr;--bslib-column-wrap-height:auto;--bslib-column-wrap-height-mobile:auto;\"> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>     <div class=\"html-fill-container\"> #>       <div class=\"html-fill-item html-fill-container\"> #>         <div class=\"card bslib-card html-fill-item html-fill-container\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\"> #>           <div class=\"card-body\" style=\"flex:0 0 auto;\">A simple card<\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://rstudio.github.io/bslib/reference/nav.html","id":null,"dir":"Reference","previous_headings":"","what":"Navigation items — nav","title":"Navigation items — nav","text":"Create nav item(s) use inside nav containers (e.g., navs_tab(), navs_bar(), etc).","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Navigation items — nav","text":"","code":"nav(title, ..., value = title, icon = NULL)  nav_menu(title, ..., value = title, icon = NULL, align = c(\"left\", \"right\"))  nav_content(value, ..., icon = NULL)  nav_item(...)  nav_spacer()"},{"path":"https://rstudio.github.io/bslib/reference/nav.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Navigation items — nav","text":"title title display. Can character string UI elements (.e., tags). ... Depends function: nav() nav_content(): UI elements (.e., tags) display item active. nav_menu(): collection nav items (e.g., nav(), nav_item()). nav_item(): UI elements (.e., tags) place directly navigation panel (e.g., search forms, links external content, etc). value character string assign nav item. value may supplied relevant container's selected argument order show particular nav item's content immediately page load. value also useful programmatically updating selected content via nav_select(), nav_hide(), etc (updating selected tabs way often useful showing/hiding panels content via UI controls like shiny::radioButtons() -- scenario, consider using nav_content() navs_hidden()). icon Optional icon appear next nav item's title. align horizontal alignment dropdown menu relative dropdown toggle.","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Navigation items — nav","text":"nav item may passed nav container (e.g. navs_tab()).","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Navigation items — nav","text":"nav(): Content display given item selected. nav_menu(): Create menu nav items. nav_content(): Create nav content use inside navs_hidden() (creating custom navigation controls via navs_select()), nav_item(): Place arbitrary content navigation panel (e.g., search forms, links external content, etc.) nav_spacer(): Adding spacing nav items.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/nav_prepend.html","id":null,"dir":"Reference","previous_headings":"","what":"Append or prepend nav item to a dropdown menu — nav_prepend","title":"Append or prepend nav item to a dropdown menu — nav_prepend","text":"Exported use shiny::prependTab()/shiny::appendTab(). functions superseded nav_insert() (.e., shiny::insertTab()), since can everything functions (.e., add nav() start end nav_menu()) (.e., insert nav() anywhere inside nav container).","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav_prepend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append or prepend nav item to a dropdown menu — nav_prepend","text":"","code":"nav_prepend(   id,   nav,   menu_title,   select = FALSE,   session = get_current_session() )  nav_append(   id,   nav,   menu_title,   select = FALSE,   session = get_current_session() )"},{"path":"https://rstudio.github.io/bslib/reference/nav_prepend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append or prepend nav item to a dropdown menu — nav_prepend","text":"id character string used identify nav container. nav nav() item. menu_title title nav_menu(). select nav selected upon inserted? session shiny session object (default almost always used).","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamically update nav containers — nav_select","title":"Dynamically update nav containers — nav_select","text":"Functions dynamically updating nav containers (e.g., select, insert, remove nav items). functions require id nav container specified must called within active Shiny session.","code":""},{"path":"https://rstudio.github.io/bslib/reference/nav_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamically update nav containers — nav_select","text":"","code":"nav_select(id, selected = NULL, session = get_current_session())  nav_insert(   id,   nav,   target = NULL,   position = c(\"after\", \"before\"),   select = FALSE,   session = get_current_session() )  nav_remove(id, target, session = get_current_session())  nav_show(id, target, select = FALSE, session = get_current_session())  nav_hide(id, target, session = get_current_session())"},{"path":"https://rstudio.github.io/bslib/reference/nav_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamically update nav containers — nav_select","text":"id character string used identify nav container. selected character string used identify particular nav() item. session shiny session object (default almost always used). nav nav() item. target value existing nav() item, next tab added. removing: value nav() item want remove. position nav added target? select nav selected upon inserted?","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/nav_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamically update nav containers — nav_select","text":"","code":"can_browse <- function() interactive() && require(\"shiny\")  # Selecting a tab if (can_browse()) {   shinyApp(     page_fluid(       radioButtons(\"item\", \"Choose\", c(\"A\", \"B\")),       navs_hidden(         id = \"container\",         nav_content(\"A\", \"a\"),         nav_content(\"B\", \"b\")       )     ),     function(input, output) {       observe(nav_select(\"container\", input$item))     }   ) }  # Inserting and removing if (can_browse()) {   ui <- page_fluid(     actionButton(\"add\", \"Add 'Dynamic' tab\"),     actionButton(\"remove\", \"Remove 'Foo' tab\"),     navs_tab(       id = \"tabs\",       nav(\"Hello\", \"hello\"),       nav(\"Foo\", \"foo\"),       nav(\"Bar\", \"bar tab\")     )   )   server <- function(input, output) {     observeEvent(input$add, {       nav_insert(         \"tabs\", target = \"Bar\", select = TRUE,         nav(\"Dynamic\", \"Dynamically added content\")       )     })     observeEvent(input$remove, {       nav_remove(\"tabs\", target = \"Foo\")     })   }   shinyApp(ui, server) }"},{"path":"https://rstudio.github.io/bslib/reference/navs.html","id":null,"dir":"Reference","previous_headings":"","what":"Navigation containers — navs_tab","title":"Navigation containers — navs_tab","text":"Render collection nav() items container.","code":""},{"path":"https://rstudio.github.io/bslib/reference/navs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Navigation containers — navs_tab","text":"","code":"navs_tab(..., id = NULL, selected = NULL, header = NULL, footer = NULL)  navs_pill(..., id = NULL, selected = NULL, header = NULL, footer = NULL)  navs_pill_list(   ...,   id = NULL,   selected = NULL,   header = NULL,   footer = NULL,   well = TRUE,   fluid = TRUE,   widths = c(4, 8) )  navs_hidden(..., id = NULL, selected = NULL, header = NULL, footer = NULL)  navs_bar(   ...,   title = NULL,   id = NULL,   selected = NULL,   sidebar = NULL,   fillable = FALSE,   position = c(\"static-top\", \"fixed-top\", \"fixed-bottom\"),   header = NULL,   footer = NULL,   bg = NULL,   inverse = \"auto\",   collapsible = TRUE,   fluid = TRUE )  navs_tab_card(   ...,   id = NULL,   selected = NULL,   title = NULL,   sidebar = NULL,   header = NULL,   footer = NULL,   height = NULL,   full_screen = FALSE,   wrapper = card_body )  navs_pill_card(   ...,   id = NULL,   selected = NULL,   title = NULL,   sidebar = NULL,   header = NULL,   footer = NULL,   height = NULL,   placement = c(\"above\", \"below\"),   full_screen = FALSE,   wrapper = card_body )"},{"path":"https://rstudio.github.io/bslib/reference/navs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Navigation containers — navs_tab","text":"... collection nav() items. id character string used dynamically updating container (see nav_select()). selected character string matching value particular nav() item selected default. header UI element(s) (tags) display nav content. footer UI element(s) (tags) display nav content. well TRUE place well (gray rounded rectangle) around navigation list. fluid TRUE use fluid layout; FALSE use fixed layout. widths Column widths navigation list tabset content areas respectively. title (left-aligned) title place card header/footer. provided, nav items automatically right aligned. sidebar sidebar() component display every nav() page. fillable Whether allow fill items grow/shrink fit browser window. TRUE, nav() pages fillable. character vector, matching value nav()s filled, may also provided. Note , sidebar provided, fillable makes main content portion fillable. position Determines whether navbar displayed top page normal scrolling behavior (\"static-top\"), pinned top (\"fixed-top\"), pinned bottom (\"fixed-bottom\"). Note using \"fixed-top\" \"fixed-bottom\" cause navbar overlay body content, unless add padding, e.g.: tags$style(type=\"text/css\", \"body   {padding-top: 70px;}\") bg CSS color use navbar's background color. inverse Either TRUE light text color FALSE dark text color. \"auto\" (default), best contrast bg chosen. collapsible TRUE automatically collapse navigation elements menu width browser less 940 pixels (useful viewing smaller touchscreen device) height valid CSS unit (e.g., height=\"200px\"). full_screen TRUE, icon appear hovering card body. Clicking icon expands card fit viewport size. Consider pairing feature card_body_fill() get output responds changes size card. wrapper function (returns UI element) call unnamed arguments ... already card item(s) (like card_header(), card_body(), etc.). Note non-card items grouped together one wrapper call (e.g. given card(\"\", \"b\", card_body(\"c\"), \"d\"), wrapper called twice, \"\" \"b\" \"d\"). Consider setting wrapper card_body_fill entire card wants responsive sizing NULL avoid wrapping altogether placement placement nav items relative content.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/navs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Navigation containers — navs_tab","text":"","code":"library(shiny)  nav_items <- function(prefix) {   list(     nav(\"a\", paste(prefix, \": tab a content\")),     nav(\"b\", paste(prefix, \": tab b content\")),     nav_item(       tags$a(icon(\"github\"), \"Shiny\", href = \"https://github.com/rstudio/shiny\", target = \"_blank\")     ),     nav_spacer(),     nav_menu(       \"Other links\", align = \"right\",       nav(\"c\", paste(prefix, \": tab c content\")),       nav_item(         tags$a(icon(\"r-project\"), \"RStudio\", href = \"https://rstudio.com\", target = \"_blank\")       )     )   ) }  if (interactive()) {   shinyApp(     page_navbar(       title = \"page_navbar()\",       bg = \"#0062cc\",       !!!nav_items(\"page_navbar()\"),       footer = div(         style = \"width:80%; margin: 0 auto\",         h4(\"navs_tab()\"),         navs_tab(!!!nav_items(\"navs_tab()\")),         h4(\"navs_pill()\"),         navs_pill(!!!nav_items(\"navs_pill()\")),         h4(\"navs_tab_card()\"),         navs_tab_card(!!!nav_items(\"navs_tab_card()\")),         h4(\"navs_pill_card()\"),         navs_pill_card(!!!nav_items(\"navs_pill_card()\")),         h4(\"navs_pill_list()\"),         navs_pill_list(!!!nav_items(\"navs_pill_list()\"))       )     ),     function(...) { }   ) }"},{"path":"https://rstudio.github.io/bslib/reference/page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap page — page","title":"Create a Bootstrap page — page","text":"functions small wrappers around shiny's page constructors (.e., shiny::fluidPage(), shiny::navbarPage(), etc) differ two ways: theme parameter defaults bslib's recommended version Bootstrap (new projects). return value rendered static HTML page printed interactively console.","code":""},{"path":"https://rstudio.github.io/bslib/reference/page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap page — page","text":"","code":"page(..., title = NULL, theme = bs_theme(), lang = NULL)  page_fluid(..., title = NULL, theme = bs_theme(), lang = NULL)  page_fixed(..., title = NULL, theme = bs_theme(), lang = NULL)  page_fill(   ...,   padding = 0,   fill_mobile = FALSE,   title = NULL,   theme = bs_theme(),   lang = NULL )  page_navbar(   ...,   title = NULL,   id = NULL,   selected = NULL,   sidebar = NULL,   fillable = FALSE,   fill_mobile = FALSE,   position = c(\"static-top\", \"fixed-top\", \"fixed-bottom\"),   header = NULL,   footer = NULL,   bg = NULL,   inverse = \"auto\",   collapsible = TRUE,   fluid = TRUE,   theme = bs_theme(),   window_title = NA,   lang = NULL )"},{"path":"https://rstudio.github.io/bslib/reference/page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap page — page","text":"... contents document body. title browser window title (defaults host URL page) theme One following: NULL (default), implies \"stock\" build Bootstrap 3. bslib::bs_theme() object. can used replace stock build Bootstrap 3 customized version Bootstrap 3 higher. character string pointing alternative Bootstrap stylesheet (normally css file within www directory, e.g. www/bootstrap.css). lang ISO 639-1 language code HTML page, \"en\" \"ko\". used lang <html> tag, <html lang=\"en\">. default (NULL) results empty string. padding Padding use body. can numeric vector (interpreted pixels) character vector valid CSS lengths. length can one four. one, value used four sides. two, first value used top bottom, second value used left right. three, first used top, second left right, third bottom. four, values interpreted top, right, bottom, left respectively. fill_mobile Whether fillable pages fill viewport's height mobile devices (.e., narrow windows). id character string used dynamically updating container (see nav_select()). selected character string matching value particular nav() item selected default. sidebar sidebar() component display every nav() page. fillable Whether allow fill items grow/shrink fit browser window. TRUE, nav() pages fillable. character vector, matching value nav()s filled, may also provided. Note , sidebar provided, fillable makes main content portion fillable. position Determines whether navbar displayed top page normal scrolling behavior (\"static-top\"), pinned top (\"fixed-top\"), pinned bottom (\"fixed-bottom\"). Note using \"fixed-top\" \"fixed-bottom\" cause navbar overlay body content, unless add padding, e.g.: tags$style(type=\"text/css\", \"body   {padding-top: 70px;}\") header UI element(s) (tags) display nav content. footer UI element(s) (tags) display nav content. bg CSS color use navbar's background color. inverse Either TRUE light text color FALSE dark text color. \"auto\" (default), best contrast bg chosen. collapsible TRUE automatically collapse navigation elements menu width browser less 940 pixels (useful viewing smaller touchscreen device) fluid TRUE use fluid layout; FALSE use fixed layout. window_title browser window title. default value, NA, means use character strings appear title (none found, host URL page displayed default).","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/precompiled_css_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the path to a precompiled CSS file — precompiled_css_path","title":"Get the path to a precompiled CSS file — precompiled_css_path","text":"function meant development debugging purposes. can used test precompiled CSS file exists given theme object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/precompiled_css_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the path to a precompiled CSS file — precompiled_css_path","text":"","code":"precompiled_css_path(theme = bs_theme())"},{"path":"https://rstudio.github.io/bslib/reference/precompiled_css_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the path to a precompiled CSS file — precompiled_css_path","text":"theme bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/precompiled_css_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the path to a precompiled CSS file — precompiled_css_path","text":"path precompiled CSS file, exists, NULL, .","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme customization UI — run_with_themer","title":"Theme customization UI — run_with_themer","text":"'real-time' theme customization UI can use easily make common tweaks Bootstrap variables immediately see affect app's appearance. two ways can launch theming UI. Shiny apps, just use run_with_themer() place shiny::runApp(); take arguments work way. Alternatively, can call bs_themer() function inside server function (R Markdown app using runtime: shiny, can call code chunk). Note function intended used development!","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme customization UI — run_with_themer","text":"","code":"run_with_themer(appDir = getwd(), ..., gfonts = TRUE, gfonts_update = FALSE)  bs_themer(gfonts = TRUE, gfonts_update = FALSE)"},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme customization UI — run_with_themer","text":"appDir application run. can file directory path, shiny::shinyApp() object. See shiny::runApp() details. ... Additional parameters pass shiny::runApp(). gfonts whether detect Google Fonts wrap font_google() (font files automatically imported). gfonts_update whether update internal database Google Fonts.","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme customization UI — run_with_themer","text":"nothing. functions called side-effects.","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme customization UI — run_with_themer","text":"help utilize changes see preview, utility prints bs_theme() code R console.","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Theme customization UI — run_with_themer","text":"work Bootstrap 3. work IE11. works inside Shiny apps runtime: shiny R Markdown documents. used static R Markdown documents. Can used extent runtime: shiny_prerendered, UI rendered context=\"server\" may update real-time. work '3rd party' custom widgets make use bs_dependency_defer() bs_current_theme().","code":""},{"path":"https://rstudio.github.io/bslib/reference/run_with_themer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme customization UI — run_with_themer","text":"","code":"library(shiny)  ui <- fluidPage(   theme = bs_theme(bg = \"black\", fg = \"white\"),   h1(\"Heading 1\"),   h2(\"Heading 2\"),   p(     \"Paragraph text;\",     tags$a(href = \"https://www.rstudio.com\", \"a link\")   ),   p(     actionButton(\"cancel\", \"Cancel\"),     actionButton(\"continue\", \"Continue\", class = \"btn-primary\")   ),   tabsetPanel(     tabPanel(\"First tab\",       \"The contents of the first tab\"     ),     tabPanel(\"Second tab\",       \"The contents of the second tab\"     )   ) )  if (interactive()) {   run_with_themer(shinyApp(ui, function(input, output) {})) }"},{"path":"https://rstudio.github.io/bslib/reference/sidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Sidebar layouts — sidebar","title":"Sidebar layouts — sidebar","text":"Create collapsing sidebar layout providing sidebar() object sidebar argument : layout_sidebar() Creates sidebar layout component can dropped inside page() card() context. page_navbar(), navs_tab_card(), navs_pill_card() Creates multi page/tab UI singular sidebar() (shown every page/tab). See article learn .","code":""},{"path":"https://rstudio.github.io/bslib/reference/sidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sidebar layouts — sidebar","text":"","code":"sidebar(   ...,   width = 250,   position = c(\"left\", \"right\"),   open = TRUE,   id = NULL,   bg = NULL,   class = NULL )  layout_sidebar(   sidebar = sidebar(),   ...,   fillable = FALSE,   fill = TRUE,   bg = NULL,   border = TRUE,   border_radius = TRUE,   height = NULL )  sidebar_open(id, session = get_current_session())  sidebar_close(id, session = get_current_session())"},{"path":"https://rstudio.github.io/bslib/reference/sidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sidebar layouts — sidebar","text":"... Unnamed arguments can valid child htmltools tag named arguments become HTML attributes returned UI element. case layout_sidebar(), arguments passed main content tag (sidebar+main content container). width valid CSS unit used width sidebar. position sidebar appear relative main content. open Whether sidebar open page load. Provide value NA prevent sidebar collapsible. id character string. Required wanting re-actively read (update) collapsible state Shiny app. bg background color. provided, accessible contrasting color provided foreground color (consider using utility class customize foreground color). class Additional CSS classes top-level HTML element. sidebar sidebar() object. fillable Whether main content area considered fillable (.e., flexbox) container. fill Whether layout container grow/shrink fit fillable container. border Whether add border. border_radius Whether add border radius. height valid CSS unit (e.g., height=\"200px\"). session shiny session object (default almost always used).","code":""},{"path":"https://rstudio.github.io/bslib/reference/sidebar.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Sidebar layouts — sidebar","text":"sidebar_open(): Open sidebar() (active Shiny user session). sidebar_close(): Close sidebar() (active Shiny user session).","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_bootswatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a theme's Bootswatch theme name — theme_bootswatch","title":"Obtain a theme's Bootswatch theme name — theme_bootswatch","text":"Obtain theme's Bootswatch theme name","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_bootswatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a theme's Bootswatch theme name — theme_bootswatch","text":"","code":"theme_bootswatch(theme)"},{"path":"https://rstudio.github.io/bslib/reference/theme_bootswatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a theme's Bootswatch theme name — theme_bootswatch","text":"theme bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_bootswatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a theme's Bootswatch theme name — theme_bootswatch","text":"Bootswatch theme named used () theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a theme's Bootstrap version — theme_version","title":"Obtain a theme's Bootstrap version — theme_version","text":"Obtain theme's Bootstrap version","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a theme's Bootstrap version — theme_version","text":"","code":"theme_version(theme)"},{"path":"https://rstudio.github.io/bslib/reference/theme_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a theme's Bootstrap version — theme_version","text":"theme bs_theme() object.","code":""},{"path":"https://rstudio.github.io/bslib/reference/theme_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a theme's Bootstrap version — theme_version","text":"major version Bootstrap used theme.","code":""},{"path":"https://rstudio.github.io/bslib/reference/value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Value box — value_box","title":"Value box — value_box","text":"opinionated (card()-powered) box, designed displaying value title. Optionally, showcase can provide context value represents (example, hold bsicons::bs_icon(), even shiny::plotOutput()).","code":""},{"path":"https://rstudio.github.io/bslib/reference/value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value box — value_box","text":"","code":"value_box(   title,   value,   ...,   showcase = NULL,   showcase_layout = showcase_left_center(),   full_screen = FALSE,   theme_color = \"primary\",   height = NULL,   class = NULL )  showcase_left_center(   width = 0.3,   max_height = \"100px\",   max_height_full_screen = 0.67 )  showcase_top_right(   width = 0.3,   max_height = \"75px\",   max_height_full_screen = 0.67 )"},{"path":"https://rstudio.github.io/bslib/reference/value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value box — value_box","text":"title, value string, number, htmltools::tag() child display title value value box. title appears value. ... Unnamed arguments may htmltools::tag() children display value.. Named arguments become attributes containing element. showcase htmltools::tag() child showcase (e.g., bsicons::bs_icon(), plotly::plotlyOutput(), etc). showcase_layout either showcase_left_center() showcase_top_right(). full_screen TRUE, icon appear hovering card body. Clicking icon expands card fit viewport size. Consider pairing feature card_body_fill() get output responds changes size card. theme_color theme color use background color. match name Bootstrap Sass variable $theme-colors (e.g., \"secondary\", \"success\", \"danger\", etc) height valid CSS unit (e.g., height=\"200px\"). class utility classes customizing appearance summary card. Use bg-* text-* classes (e.g, \"bg-danger\" \"text-light\") customize background/foreground colors. width one following: proportion (.e., number 0 1) available width allocate showcase. vector length 2 valid CSS unit defining width column (showcase_left_center() 1st unit defines showcase width showcase_top_right 2nd unit defines showcase width). Note units supported CSS grid grid-template-columns property may used (e.g., fr units). max_height, max_height_full_screen proportion (.e., number 0 1) valid CSS unit defining showcase max_height.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/reference/value_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Value box — value_box","text":"","code":"library(htmltools)  if (interactive()) {   value_box(     \"KPI Title\",     h1(HTML(\"$1 <i>Billion<\/i> Dollars\")),     span(       bsicons::bs_icon(\"arrow-up\"),       \" 30% VS PREVIOUS 30 DAYS\"     ),     showcase = bsicons::bs_icon(\"piggy-bank\"),     class = \"bg-success\"   ) }"},{"path":"https://rstudio.github.io/bslib/reference/versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Bootstrap versions — versions","title":"Available Bootstrap versions — versions","text":"Available Bootstrap versions","code":""},{"path":"https://rstudio.github.io/bslib/reference/versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Bootstrap versions — versions","text":"","code":"versions()  version_default()"},{"path":"https://rstudio.github.io/bslib/reference/versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Bootstrap versions — versions","text":"list Bootstrap versions available.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"breaking-changes-0-4-2-9000","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bslib 0.4.2.9000","text":"page_fill() now produces <body> tag display:flex (instead display:block). also longer fills windows height mobile (.e., narrow screens) default. breaks existing behavior, consider using shiny::fillPage(theme = bslib::bs_theme(), ...) instead page_fill(). (#479) page_navbar() (consequently shiny::navbarPage()) longer implicitly wrap header footer additional shiny::fluidRow() container Bootstrap 5+ (.e., theme = bs_theme()). Similarly, navs_bar() longer (version Bootstrap). breaks existing behavior, consider wrapping header footer value(s) shiny::fluidRow()). (#479) Defaults following Bootstrap 5 Sass variables changed null: $accordion-button-active-bg, $accordion-button-active-color, $accordion-icon-active-color. restore old behavior, bs_add_variables(theme, \"accordion-button-active-bg\" = \"tint-color($component-active-bg, 90%)\", \"accordion-button-active-color\" = \"shade-color($primary, 10%)\", \"accordion-icon-active-color\" = \"$accordion-button-active-color\", .= \"declarations\"). (#475)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-0-4-2-9000","dir":"Changelog","previous_headings":"","what":"New features","title":"bslib 0.4.2.9000","text":"Added sidebar() API creating sidebar layouts various contexts. See article learn . (#479) Adds new accordion() API. See help(accordion) examples details. Note also accordion() designed work well inside sidebar(). (#475) page_navbar(), navs_tab_card(), navs_pill_card() gain sidebar argument putting sidebar() every page/tab/pill. (#479) page_navbar() gains fillable argument make content particular page(s) fit window/card. (#479) page_fill() now considered fillable container, meaning fill items like card(), layout_column_wrap(), layout_sidebar() now grow/shrink fit window’s height appear direct child page_fill(). (#479) page_navbar() page_fill() gain fill_mobile arguments control whether page grow/shrink fit viewport mobile. (#479)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-042","dir":"Changelog","previous_headings":"","what":"bslib 0.4.2","title":"bslib 0.4.2","text":"CRAN release: 2022-12-16","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"potentially-breaking-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Potentially breaking changes","title":"bslib 0.4.2","text":"Upgraded Bootstrap 5 (.e., bs_theme(version = 5)) 5.1.3 5.2.2. (#438, #455)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-0-4-2","dir":"Changelog","previous_headings":"","what":"New features","title":"bslib 0.4.2","text":"Adds new card() API well value_box() layout_column_wrap(). learn new functionality, refer new pkgdown articles: https://rstudio.github.io/bslib/articles/cards.html https://rstudio.github.io/bslib/articles/value-boxes.html https://rstudio.github.io/bslib/articles/layouts.html","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-041","dir":"Changelog","previous_headings":"","what":"bslib 0.4.1","title":"bslib 0.4.1","text":"CRAN release: 2022-11-02","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"bslib 0.4.1","text":"Closed #458. release bslib now requires memoise 2.0.1 .","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-040","dir":"Changelog","previous_headings":"","what":"bslib 0.4.0","title":"bslib 0.4.0","text":"CRAN release: 2022-07-16","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bslib 0.4.0","text":"bs_theme() now defaults version = 5 (.e., Bootstrap 5). change happens break existing app, consider specifying bs_theme(version = 4) revert change Bootstrap version. (#374) default coloring Bootswatch 4+ theme’s .navbar-default/.navbar-inverse class changed slightly better match Bootswatch 3 coloring. Also, since coloring now based solely $navbar-* variables, Bootswatch themes now work better combination custom $navbar-* values (e.g., bs_theme(\"navbar-bg\" = ...) can used provide background color, foreground colors automatically contrast appropriately). (#392)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bslib 0.4.0","text":"Upgraded Bootstrap 5 (.e., bs_theme(version = 5)) 5.1.0 5.1.3 (#378) Closed #369: bs_dependency_defer() now memoises func (default), reducing time required render multiple instances dynamically themable widget. (#405)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bslib 0.4.0","text":"Closed #393: Bootstrap 5’s $form-check-label-* variables now work expected shiny::radioButtons(), shiny::checkboxInput(), shiny::checkboxGroupInput(). (#395) Closed #382: Various fixes using shiny::checkboxInput(), shiny::checkboxGroupInput(), shiny::radioButton() bs_theme(version = 5, bootswatch = \"sketchy\"). (#385) Closed #377: make sure shiny::tabsetPanel(type = \"hidden\") (.e., bslib::navs_hidden()) stays hidden used bs_theme(). (#379) Closed #424: fixed issue nav_menu() appearing first navs_*() container Bootstrap 4+. Closed #431: Bootstrap 5 navbars longer unwanted “Toggle Navigation” label collapsed. (#432) Closed #400: nav_menu(align=\"right\") now works Bootstrap 5. (#401) Closed #390: using bs_theme(bootswatch = \"paper\", version = 5) bs_theme(bootswatch = \"readable\", version = 5) longer errors. (#391)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-031","dir":"Changelog","previous_headings":"","what":"bslib 0.3.1","title":"bslib 0.3.1","text":"CRAN release: 2021-10-06","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"bslib 0.3.1","text":"Upgraded Bootstrap 5 (.e., bs_theme(version = 5)) 5.0.2 5.1.0 (#365)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bslib 0.3.1","text":"Closed rstudio/shiny#3519: nav_menu() (.e., shiny::navbarMenu()) wasn’t producing .active class ’s .dropdown container properly. (#372)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-030","dir":"Changelog","previous_headings":"","what":"bslib 0.3.0","title":"bslib 0.3.0","text":"CRAN release: 2021-09-02","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bslib 0.3.0","text":"Closed rstudio/rmarkdown#2154: magrittr’s pipe operator (%>%) longer re-exported bslib. Either library(magrittr) make %>% available /use use R 4.1’s pipe operator (|>).","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bslib 0.3.0","text":"Closed #82: Added support Bootstrap 5 (via bs_theme(version = 5)). Bootstrap 4 remains default release, next release, default likely change Bootstrap 5.","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bslib 0.3.0","text":"Closed #6: rmarkdown’s .tabset-fade class now works Bootstrap 4+ since legacy use .nav .fade now officially supported Bootstrap 4+. (#325)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-0251","dir":"Changelog","previous_headings":"","what":"bslib 0.2.5.1","title":"bslib 0.2.5.1","text":"CRAN release: 2021-05-18 Small patch release fix failing test Solaris.","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-025","dir":"Changelog","previous_headings":"","what":"bslib 0.2.5","title":"bslib 0.2.5","text":"CRAN release: 2021-05-12","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"new-features-and-improvements-0-2-5","dir":"Changelog","previous_headings":"","what":"New features and improvements","title":"bslib 0.2.5","text":"Closed #251: New bs_theme() options (navbar-bg, navbar-light-bg, navbar-dark-bg) easily customizing navbar’s background (foreground) color (#253, #271). Closed #281: New bs_theme() argument (font_scale) easier scaling base font size (#288). Closed #256 #282: Font file importers (font_google(), font_link(), font_face()) now re-exported sass package. result, may now used Sass variable (e.g., bs_theme(\"input-font-family\" = font_google(\"Pacifico\"))) well inside Rmd yaml without !expr (e.g., input-font-family: google: Pacifico – see #256 details). new font_collection() function also added convenient way specify font fallbacks (#291). Closed #255: bs_themer() now emits sensible yaml front matter used within Rmd document (#288). Closed #227: bs_themer() now overlays spinner Sass compilation (#243). Closed #278: bslib now includes rmarkdown::html_document templates demonstrating example usage bslib thematic (#288). Closed #231: Upgraded Bootstrap 4.5.3 4.6.0 (#254). Closed #237: <blockquote> tags now border-left/padding styles version = 4 (mirror version = 3 behavior) (#239). Closed #279: Warnings low color contrasts now suppressed default, unless shiny::devmode() enabled. enable/disable warnings, set new options(bslib.color_contrast_warnings = ) TRUE/FALSE (#287). bs_theme_dependencies() now includes Sass source maps shiny::devmode() enabled (#312). Added new bs_add_functions()/bs_add_mixins() deprecated bs_add_declarations() reflect sass::sass_layer()’s new ability place functions variable defaults. result, variable definitions may now use functions defined bs_add_functions(). (#311)","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bug-fixes-0-2-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bslib 0.2.5","text":"Closed #236, #230, #242, #187, #215, #250: Addressed various cosmetic issues CSS (#249). Closed #289: collapsed navbar toggle now correctly floats right (#290). Closed rstudio/flexdashboard#316: fixed issue navbar nav spacing/alignment (#286).","code":""},{"path":"https://rstudio.github.io/bslib/news/index.html","id":"bslib-024","dir":"Changelog","previous_headings":"","what":"bslib 0.2.4","title":"bslib 0.2.4","text":"CRAN release: 2021-01-25 Initial release package, see https://rstudio.github.io/bslib/","code":""}]
